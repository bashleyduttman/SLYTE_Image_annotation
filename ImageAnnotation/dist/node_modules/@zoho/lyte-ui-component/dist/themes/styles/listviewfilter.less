/* Default theme imported */

@import "../themes/default/ui-elements/listviewfilter/listviewfilter.variables.less";

/* Loading theme in configuration */

@import "../config.less";

@import (optional) "../themes/@{listviewfilter}/ui-elements/listviewfilter/listviewfilter.variables.less";

/* rtl files loading */

@import (multiple,optional) "../themes/default/global/@{direction}.less";

@import (multiple,optional) "../themes/@{listviewfilter}/global/@{direction}.less";

/* Loading custom themes */

lyte-listview-filter {
	.lyteListviewFilterMixin();
	display: block;
	margin: @margin;
}
.lyteListViewFilterWrapper {
	display: inline-block;
	position: relative;
}
.lyteListViewFilters {
	.lyteListViewFiltersMixin();
	display: inline-flex;
	background: @bg;
	border: @border;
	border-radius: @border-radius;
	padding: @padding;
	gap: @gap;
}
.lyteListViewFilters:focus-within {
	.lyteListViewFiltersFocusWithinMixin();
	border: @border;
	box-shadow: @box-shadow;
}
.lyteListViewFilterInput {
	.lyteListViewFilterInputMixin();
	display: block;
	border: @border;
	outline: @outline;
	padding: @padding;
}
.lyteFilterSearchWrap + .lyteListViewFilterInput {
	.lyteFilterSearchWrapMixin();
	padding: @padding;
}
.lyteListViewDropdownHidden {
	display: none;
}
.lyteListViewDropdown {
	.lyteListViewDropdownMixin();
	position: absolute;
	z-index: @z-index;
}
.lyteListViewDropdownUl {
	.lyteListViewDropdownUlMixin();
	list-style: none;
	border: @border;
	border-radius: @border-radius;
	background: @bg;
	box-shadow: @box-shadow;
	color: @color;
	font-size: @font-size;
	padding: @padding;
	min-width: @min-w;
	max-width: @max-w;
	max-height: @max-height;
	overflow: auto;
}
.lyteListViewDropdownLi {
	.lyteListViewDropdownLiMixin();
	padding: @padding;
	cursor: pointer;
}
.lyteFilterSearchWrap {
	.lyteFilterSearchWrapMixin();
	display: flex;
	align-items: center;
	border-radius: @border-radius;
	border: @border;
	font-size: @font-size;
	white-space: nowrap;
}
.lyteInputFilterLabel {
	.lyteInputFilterLabelMixin();
	padding: @padding;
	background: @bg;
	border-radius: @border-radius;
}
.lyteFilterColumnName {
	.lyteFilterColumnNameMixin();
	padding: @padding;
	background: @bg;
}
.lyteFilterCondition {
	.lyteFilterConditionMixin();
	padding: @padding;
	outline: @outline;
}
.lyteInputFilterName {
	.lyteInputFilterNameMixin();
	border: @border;
	outline: @outline;
	padding: @padding;
	width: @w;
}
.lyteListViewFilterClearIcon {
	.lyteListViewFilterClearIconMixin();
	display: inline-flex;
	padding: @padding;
	border-radius: @border-radius;
	align-items: center;
	align-self: stretch;
	cursor: pointer;
}
.lyteFilterSearchWrap:hover .lyteListViewFilterClearIcon {
	.lyteFilterSearchWrapHoverMixin();
	background: @bg;
}
.lyteListViewFilterClearIcon::before {
	.lyteListViewFilterClearIconBeforeMixin();
	content: '';
	-webkit-mask-image: url(../images/sprite_lyte.svg);
	-webkit-mask-position: @-webkit-mask-position;
	mask-image: url(../images/sprite_lyte.svg);
	mask-position: @mask-position;
	background-color: @bg;
	width: @w;
	height: @h;
	display: inline-block;
}
.lyteFilterSearchWrap:hover .lyteListViewFilterClearIcon::before {
	.lyteFilterSearchWrapHoverListViewFilterClearIconBeforeMixin();
	background-color: @bg;
}
