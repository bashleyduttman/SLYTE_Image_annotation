/* Default theme imported */

@import "../themes/default/ui-elements/listview/listview.variables.less";

/* Loading theme in configuration */

@import "../config.less";

@import (optional) "../themes/@{listview}/ui-elements/listview/listview.variables.less";

/* rtl files loading */

@import (multiple,optional) "../themes/default/global/@{direction}.less";

@import (multiple,optional) "../themes/@{listview}/global/@{direction}.less";

/* Loading custom themes */

.lyteListUtils {
	.lyteListUtilsMixin();
	display: flex;
	justify-content: space-between;
	align-items: center;
	margin-bottom: @margin-bottom;
}
.lyteListviewWrapper .lyteStickyTable .lyteFixedColumn {
	position: sticky;
}
.lyteListviewWrapper .lyteStickyTable .lyteTableFixed {
	.lyteListviewWrapperStickyTableFixedMixinMixin();
	z-index: @z-index;
}
.lyteListviewWrapper .lyteStickyTable lyte-th.lyteTableFixed {
	.lyteListviewWrapperStickyTableThFixedMixin();
	z-index: @z-index;
}
.lyteListviewWrapper .lyteIntersectionDiv {
	.lyteListviewWrapperIntersectionDivMixin();
	position: absolute;
	width: @w;
	height: @h;
	top: @top;
	opacity: @opacity;
	pointer-events: none; 
	z-index: @z-index;
}
.lyteListviewWrapper .lyteStickyTable lyte-th {
	.lyteListviewWrapperStickyTableThMixin();
	top: @top;
	position: sticky;
	z-index: @z-index;
	transform: @transform;
	background: @bg;
	border-bottom: @border-bottom;
}

.lyteListviewWrapper:not(.lyteListViewInfiniteScroll) .lyteStickyTable lyte-th {
	.LytelistviewwrappernotListViewInfiniteScrollStickyTableThMixin();
	top: @top;
	transform: @transform;
}
.lyteListviewWrapper:not(.lyteListViewInfiniteScroll).lyteListviewSubHeaderPresent .lyteStickyTable lyte-th {
	.LytelistviewwrappernotListViewInfiniteScrollListviewSubHeaderPresentStickyTableThMixin();
	top: @top;
}
.lyteListviewWrapper .lyteTableScroll {
	position: relative;
}
.lyteListviewWrapper lyte-table.lyteStickyTable {
	.lyteListviewWrapperTableStickyTableMixin();
	--lyte-table-intersection: @--lyte-table-intersection;
	border-radius: @border-radius;
	border: @border;
}
.lyteListHeaderName {
	.lyteListHeaderNameMixin();
	max-width: @max-w;
	display: inline-block;
	text-overflow: ellipsis;
	overflow: hidden;
}


.lyteListviewIntersection {
	.lyteListviewIntersectionMixin();
	height: @h;
	pointer-events: none;
}

lyte-listview1 {
	.lyteListview1Mixin();
	height: @h;
	display: block;
	position: relative;
}
.lyteListviewWrapper:not(.lyteListViewInfiniteScroll) .lyteListFakeHeader {
	.LytelistviewwrappernotListViewInfiniteScrollListFakeHeaderMixin();
	position: sticky;
	top: @top;
	transform: @transform;
}

.lyteListviewWrapper {
	.lyteListviewWrapperMixin();
	height: @h;
}
.lyteListFakeHeader {
	.lyteListFakeHeaderMixin();
	display: flex;
	position: relative;
	z-index: @z-index;
	transform: @transform;
	background: @bg;
	border-radius: @border-radius;
}
.lyteListFakeCell {
	.lyteListFakeCellMixin();
	position: sticky;
	top: @top;
	height: @h;
	box-sizing: border-box;
	padding: @padding;
}
.lyteListFakeCell:nth-child(odd) {
	.LytelistfakecellnthchildOddMixin();
	background: @bg;
}
.lyteListFakeCell:nth-child(even) {
	.LytelistfakecellnthchildEvenMixin();
	background: @bg;
}
.lyteListviewWrapper lyte-table-structure {
	table-layout: fixed;
}
.lyteListFixed{
	.lyteListFixedMixin();
	background: @bg;
	z-index: @z-index;
}
.lyteListResizeHandler {
	.lyteListResizeHandlerMixin();
	position: absolute;
	right: @right;
	width: @w;
	display: flex;
	justify-content: flex-end;
	height: @h;
	top: @top;
	cursor: ew-resize;
}
.lyteListFakeCell .lyteListResizeHandler {
	visibility: hidden;
}
.lyteListResizeHandler::after {
	.lyteListResizeHandlerAfterMixin();
	content: '';
	display: block;
	width: @w;
	background: @bg;
}
.lyteListviewWrapper lyte-td,
.lyteListviewWrapper td {
	.lyteListviewWrappertdMixin();
	cursor: pointer;
	padding: @padding;
}
.lyteListviewWrapper td {
	.lyteListviewWrapperTdMixin();
	display: table-cell;
	border-bottom: @border-bottom;
	vertical-align: middle;
	background: @bg;
	min-width: @min-w;
	box-sizing: border-box;
	font-size: @font-size;
	white-space: nowrap;
	color: @color;
}
.lyteListviewWrapper lyte-td:hover,
.lyteListviewWrapper td:hover {
	.lyteListviewWrapperTdHoverMixin();
	background: @bg;
}

.lyteListEditElement {
	.lyteListEditElementMixin();
	position: absolute;
	display: none;
	border: @border;
	outline: @outline;
	box-sizing: border-box;
	z-index: @z-index;
}
.lyteListEditElement.lyteListActive {
	display: flex;
}
.lyteEditElementWrapper {
	flex-grow: 1;
	overflow: auto;
}
.lyteEditElementWrapper .lyteInputBox .lyteField {
	.lyteEditElementWrapperInputBoxFieldMixin();
	border: @border;
}
.lyteListviewEditElement {
	.lyteListviewEditElementMixin();
	height: @h;
	width: @w;
	max-width: @max-w;
	display: flex;
}
.lyteListEditElement lyte-dropdown {
	.lyteListEditElementdropdownMixin();
	max-width: @max-w;
}
.lyteListviewEditElement .lyteDummyEventContainer,
.lyteListviewEditElement input {
	.lyteListviewEditElementDummyEventContainerviewEditElementMixin();
	height: @h;
	max-width: @max-w;
}
.lyteListviewEditElement .lyteDummyEventContainer {
	flex-grow: 1;
}
.lyteListviewEditElement .lyteDateTimeInputWrapper {
	.lyteListviewEditElementDateTimeInputWrapperMixin();
	max-width: @max-w;
	border: @border;
}
.lyteListviewEditElement .lyteDateInputDropdown,
.lyteListviewEditElement .lyteDateTimeInputWrapper > input {
	.lyteListviewEditElementDateInputDropdownMixin();
	max-width: @max-w;
	box-sizing: border-box;
}
.lyteListviewEditElement lyte-drop-button {
	.lyteListviewEditElementDropButtonMixin();
	display: flex;
	align-items: center;
	height: @h;
	max-width: @max-w;
	border: @border;
	padding: @padding;
}
.lyteListviewEditElement .lyteDateInputDropdown lyte-drop-button {
	.lyteListviewEditElementDateInputDropdownDropButtonMixin();
	padding: @padding;
}
.lyteListEditElement > lyte-yield {
	.lyteListEditElementYieldMixin();
	display: block;
	width: @w;
	height: @h;
}

.lyteListviewWrapper lyte-td > lyte-yield > span,
.lyteListviewWrapper td > lyte-yield > span {
	display: block;
	text-overflow: ellipsis;
	overflow: hidden;
	white-space: nowrap;
}
.lyteListviewWrapper lyte-td > lyte-yield,
.lyteListviewWrapper td > lyte-yield {
	display: block;
}
/*	Lyte List view filter related CSS Begins	*/
.lyteFilterType {
	.lyteFilterTypeMixin();
	margin: @margin;
}
.lyteFilterType lyte-radiobutton:first-child {
	.lyteFilterTypeRadiobuttonFirstChildMixin();
	margin-right: @margin-right;
}
.lyteFilterReset {
	.lyteFilterResetMixin();
	font-family: @font-family;
	color: @color;
	font-size: @font-size;
	cursor: pointer;
}
.lyteFilterContent lyte-accordion-item {
	.lyteFilterContentMixin();
	border: @border;
	margin: @margin;
}
.lyteFilterContent lyte-accordion-header {
	.lyteFilterContentAccordianHeaderMixin();
	padding: @padding;
	display: flex;
	align-items: center;
}
.lyteFilterContent lyte-accordion-body {
	.lyteFilterContenttAccordianBodyMixin();
	display: flex;
	flex-direction: column;
	padding-left: @padding-left;
	padding-right: @padding-right;
}
.lyteFilterContent .lyteAccordionArrow {
	.lyteFilterContentAccordionArrowMixin();
	position: static;
	margin-top: @margin-top;
	margin-left: @margin-left;
}
.lyteListModalWrapper lyte-modal-header {
	.lyteListModalWrapperMixin();
	padding: @padding;
}
.lyteListModalWrapper lyte-modal-content {
	.lyteListModalWrapperModalContentMixin();
	padding: @padding;
}
.lyteListModalWrapper lyte-modal-footer {
	.lyteListModalWrapperModalFooterMixin();
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: @padding;
}
.lyteFilterElement {
	.lyteFilterElementMixin();
	display: flex;
	margin-top: @margin-top;
	padding: @padding;
}
lyte-multiselect-filter {
	flex-direction: column;
}
.lyteMultiselectFilterTable {
	.lyteMultiselectFilterTableMixin();
	max-height: @max-height;
	margin-top: @margin-top;
	border-radius: @border-radius;
	border: @border;
}
.lyteMultiselectFilterTable .lyteTableScroll {
	.lyteMultiselectFilterTableScrollMixin();
	max-height: @max-height;
}
.lyteMultiselectFilterTable lyte-table-structure {
	.lyteMultiselectFilterTableStructureMixin();
	background: @bg;
}
.lyteMultiselectFilterTable lyte-td {
	.lyteMultiselectFilterTableTdMixin();
	border-bottom: @border-bottom;
	padding: @padding;
	background: @bg;
}
.lyteMultiselectFilterTable .lyteMultipleEmail {
	.lyteMultiselectFilterTableMultipleEmailMixin();
	margin-left: @margin-left;
}

.lyteTextFilterWrapper {
	.lyteTextFilterWrapperMixin();
	margin-left: @margin-left;
}
.lyteNumberFilterWrapper,
.lyteDateFilterWrapper {
	.lyteDateFilterWrapperMixin();
	margin-left: @margin-left;
	display: flex;
}
.lyteNumberFilterWrapper lyte-input:nth-child(2),
.lyteDateFilterWrapper lyte-input:nth-child(2) {
	.lyteDateFilterWrapperLyteInputnthChildMixin();
	margin-left: @margin-left;
}
.lyteDateFilterDisabledElement {
	.lyteDateFilterDisabledElementMixin();
	padding: @padding;
	background: @bg;
	border-radius: @border-radius;
}
/*	Lyte List view filter related CSS Ends	*/
/*	Lyte List view Filter Summary Begins	*/

.lyteListFilters {
	.lyteListFiltersMixin();
	border: @border;
	padding: @padding;
	border-radius: @border-radius;
}
.lyteListFilterItem {
	.lyteListFilterItemMixin();
	display: flex;
	margin-bottom: @margin-bottom;
	position: relative;
	padding-left: @padding-left;
}
.lyteListFilterKey {
	.lyteListFilterKeyMixin();
	color: @color;
	margin-right: @margin-right;
}
.lyteListFilterValueWrap .lyteListMultipleSelected {
	.lyteListFilterValueWrapMixin();
	padding: @padding;
	border: @border;
	display: inline-block;
	border-radius: @border-radius;
	font-size: @font-size;
}
.lyteListRemoveFilter {
	.lyteListRemoveFilterMixin();
	content: '';
	display: block;
	-webkit-mask-image: url(../images/sprite_lyte.svg);
	mask-image: url(../images/sprite_lyte.svg);
	-webkit-mask-position: @-webkit-mask-position;
	mask-position: @mask-position;
	background-color: @bg;
	width: @w;
	height: @h;
	cursor: pointer;
	position: absolute;
	left: @left;
	top: @top;
	visibility: hidden;
}
.lyteListRemoveFilter:hover {
	.lyteListRemoveFilterHoverMixin();
	background-color: @bg;
}
.lyteListFilterItem:hover .lyteListRemoveFilter {
	visibility: visible;
}
/*	Lyte List view Filter Summary Ends	*/
/*	Lyte Column Chooser component Related CSS Begins	*/

lyte-column-chooser {
	display: block;
}
.lyteColumnChooser {
	display: flex;
	flex-direction: column;
}
.lyteListviewManageColumnPopover lyte-popover-header {
	.lyteListviewManageColumnPopoverMixin();
	padding: @padding;
}
.lyteListviewManageColumnPopover lyte-popover-content {
	.lyteListviewManageColumnPopoverContentMixin();
	max-height: @max-height;
	overflow: auto;
	padding: @padding;
}
.lyteColumnChooser lyte-checkbox {
	.lyteColumnChooserCheckboxMixin();
	margin-bottom: @margin-bottom;
}
/*	Lyte Column Chooser component Related CSS Ends	*/
/*	List view Accordion table related CSS Begins	*/

.lyteListViewTableAccordionIcon {
	.lyteListViewTableAccordionIconMixin();
	-webkit-mask-image: url(../images/sprite_lyte.svg);
	-webkit-mask-position: @-webkit-mask-position;
	mask-image: url(../images/sprite_lyte.svg);
	mask-position: @mask-position;
	background-color: @bg;
	width: @w;
	height: @h;
	display: inline-block;
	vertical-align: middle;
	transform: @transform;
}
.lyteListViewRowHidden .lyteListViewTableAccordionIcon {
	.lyteListViewRowHiddenMixin();
	transform: @transform;
}
.lyteListviewWrapper td .lyteListViewTableAccordionIcon + lyte-yield {
	.lyteListviewWrapperTdListViewTableAccordionIconYieldMixin();
	font-family: @font-family;
	display: inline-block;
	margin-left: @margin-left;
	vertical-align: middle;
}
.lyteGroupHeading:hover {
	.lyteGroupHeadingHoverMixin();
	background: @bg;
}
.lyteGroupHeading td,
.lyteGroupHeading:hover td {
	.lyteGroupHeadingHoverTdMixin();
	background: @bg;
}
.lyteGroupHeading .lyteTableFixed {
	.lyteGroupHeadingMixin();
	box-shadow: @box-shadow;
}
/*	List view Accordion table related CSS Ends	*/
/*	List view footer related CSS Begins	*/



.lyteListviewFooter {
	.lyteListviewFooterMixin();
	display: flex;
	padding: @padding;
	background: @bg;
	border-radius: @border-radius;
}
.lyteListviewFooter .lyteListviewNavigator {
	.lyteListviewFooterListviewNavigatorMixin();
	margin-left: @margin-left;
}
.lyteListviewPerPageContainer {
	display: flex;
	align-items: center;
}
.lyteListviewPerPageLabel {
	.lyteListviewPerPageLabelMixin();
	margin-left: @margin-left;
}
/*	List view footer related CSS Ends	*/


.lyteListUtils lyte-listview-filter {
	.lyteListUtilsListviewFilterMixin();
	margin: @margin;
}
