/* Default theme imported */
@import "../themes/default/ui-elements/calendar/calendar.variables.less";




/* Loading theme in configuration */
@import "../config.less";
@import (optional) "../themes/@{calendar}/ui-elements/calendar/calendar.variables.less";

/* rtl files loading */

@import (multiple,optional) "../themes/default/global/@{direction}.less";

@import (multiple,optional) "../themes/@{calendar}/global/@{direction}.less";


/* Loading final tweaks to your variables */
@import (optional) "../overrides/ui-elements/calendar.variables.less";


/*  Calendar related CSS BEGINS     */

lyte-calendar {
    display: inline-block;
}
.lyteCalendarPopup {
    .CalendarPopup();
    background: @bg;
    z-index: @z-index;
    box-shadow: @box-shadow;
    font-family: @primaryFont;
    font-size: @font-size;
    display: inline-block;
    border: @border;
}
.lyteCalendarNavigator {
    .CalendarNavigator();
    padding: @padding;
    display: flex;
    align-items: center;
}
.lyteCalMonthDD {
    .CalMonthDD();
    max-width: @max-w;
    width: auto;
}
.lyteCalYearDD {
    width: auto;
}
.lyteCalendarPopup lyte-dropdown lyte-drop-button {
    .calPopDropBtn();
    box-sizing: border-box;
    color: @color;
    padding: @padding;
    border: 0;
}
.lyteCalMonthDD lyte-drop-button {
    .calMonthDropBtn();
    font-size: @font-size;
}
.lyteCalYearDD lyte-drop-button {
    .calYearDropBtn();
    font-size: @font-size;
}
.lyteCalendarPopup lyte-dropdown lyte-icon.dropdown {
    .calPopDropicon();
    top: @top;
}
.lyteCalendarPopup lyte-dropdown lyte-drop-button.lyteDropButtonDown,
.lyteCalendarPopup lyte-dropdown lyte-drop-button.lyteDropButtonUp,
.lyteCalendarPopup lyte-dropdown lyte-drop-button:hover {
    .calPopDropBtnHover();
    color: @color;
    padding: @padding;
    border: 0;
}
.lyteCalendarDropdown lyte-drop-item {
    .calPopDropItem();
    min-width: @min-w;
}
.lyteCalNav {
    .CalNav();
    width: @w;
    height: @h;
    display: inline-block;
    cursor: pointer;
    position: relative;
    order: 2;
    border: @border;
    border-radius: 50%;
    & when (@rtlEnabled = true) {
        transform: @value-rotate-0deg;
    }
}
.lyteCalNav:hover {
    .CalNavHover();
    border: @border;
}
.lyteCaldLft::before,
.lyteCaldRgt::before {
    .CaldLft();
    content: '';
    position: absolute;
    top: @top;
    @{property-left}: @left;
    width: @w;
    height: @h;
	& when (@useCssMaskForBg = true) {
		.lyteMaskBgMixin(@mask-img, @mask-pos, @bg-color);
	}
	& when not (@useCssMaskForBg = true) {
		background-image: @bg-img;
		background-position: @bg-pos;
	}
    opacity: @opacity;
}
.lyteCalyearNavLft::before,
.lyteCalyearNavRgt::before {
	.lyteCalyearNavLftBeforeMixin();
    content: '';
    position: absolute;
    top: @top;
    @{property-left}: @left;
    width: @w;
    height: @h;
	& when (@useCssMaskForBg = true) {
		.lyteMaskBgMixin(@mask-img, @mask-pos, @bg-color);
	}
	& when not (@useCssMaskForBg = true) {
		background-image: @bg-img;
		background-position: @bg-pos;
	}
    opacity: @opacity;
}
.lyteCaldRgt {
    .lyteCaldRgt();
    @{property-margin-left}: @margin-left;
}
.lyteCalyearNavRgt {
	.lyteCalyearNavRgt();
    @{property-margin-left}: @margin-left;
}
.lyteCalyearNavLft {
	.lyteCalyearNavLft();
    @{property-margin-right}: @margin-right;
}
.lyteCalyearNavLft::before {
    transform: rotate(180deg);	
}
.lyteCaldLft::before {
    .caldLftBefore();
    top: @top;
    transform: rotate(180deg);
}
.lyteCalNav:hover::before {
    .CalNavHoverBefore();
    opacity: @opacity;
}
.lyteCalsCalMon {
    .CalMonthYear();
    flex-grow: 3;
    text-align: @value-textalign-left;
    order: 1;
    cursor: default;
    color: @color;
}
.lyteCalsCalMonth {
    .CalMonthText();
    font-size: @font-size;
}
.lyteCalsCalYear {
    .CalYearText();
    font-size: @font-size;
}
.lyteCalTableContainer {
    .CalTableContainer();
    border-spacing: @border-spacing;
    box-sizing: border-box;
    display: table;
    padding: @padding;
    width: 100%;
}
.lyteCalTableRow,
.lyteCalTableRowHeader {
    display: table-row;
}
.lyteCalTableCellHeader {
    .CalTableCellHeader();
    color: @color;
    cursor: default;
    display: table-cell;
    font-size: @font-size;
    text-transform: @text-transform;
    text-align: center;
    padding-bottom: @padding-bottom;
}
.lyteCalTableCell {
    .CalTableCell();
    border: @border;
    color: @color;
    cursor: pointer;
    font-size: @font-size;
    display: table-cell;
	vertical-align: middle;
    padding: @padding;
    text-align: center;
    width: @w;
    min-width: @w;
    height: @h;
    border-radius: @border-radius;
}
.lyteCalGray {
    .CalGray();
    opacity: @opacity;
}
.lyteCalGray:hover,
.lyteCalGray.lyteCalSel {
    opacity: 1;
}
.lyteCalToday {
    .CalToday();
    background: @bg;
    color: @color;
    border: @border;
}
.lyteCalTableCell:hover,
.lyteCalToday:hover {
    .CalTodayHover();
    background: @bg;
}
.lyteCalDisabled.lyteCalSel,
.lyteCalHoliday.lyteCalSel,
.lyteCalWeekend.lyteCalSel,
.lyteCalSel,
.lyteCalSel:hover {
    .CalSelHover();
    background: @bg;
    color: @color;
    border: @border;
}
.lyteCalBtns .lyteCalCurrentDate {
    .CalBtns();
    padding: @padding;
    border-top: @border-top;
    text-align: center;
}
.lyteCalCurrentDate a {
    .CalCurrentDate();
    color: @color;
    cursor: pointer;
}
.lyteCalEmpty {
    display: table-cell;
}
.lyteCalendarHidden {
    display: none;
}
.lyteCalendarPopup .lyteDummyEventContainer:focus lyte-drop-button,
.lyteCalendarPopup .lyteDummyEventContainer:focus lyte-drop-button:hover,
.lyteCalendarPopup lyte-drop-button.lyteDropButtonUp,
.lyteCalendarPopup lyte-drop-button.lyteDropButtonDown {
    .lyteCalDropdownOpenedMixin();
    border: @border;
    box-shadow: @box-shadow;
}
.lyteCalTableRowGroup {
    display: table-row-group;
}
.lyteCalDisabled {
    .DRPDisabledDate();
    background: @bg;
    pointer-events: none;
    opacity: @opacity;
}
.lyteCalendarDisabledDate {
	.lyteCalDisabledDateMixin();
	background: @bg;
	opacity: @opacity;
	cursor: default;
}
.lyteCalendarDisabledDate:hover {
	.lyteCalDisabledDateHoverMixin();
	background: @bg;
}

/*  Drilldown calendar CSS BEGINS   */

.lyteDrillCalYearView,
.lyteDrillCalMonthView {
    .drillCalYearViewMixin();
    border-spacing: @border-spacing;
}
.lyteDrillCalYearView .lyteCalTableCell,
.lyteDrillCalMonthView .lyteCalTableCell {
    .drillCalYearViewCellMixin();
    height: auto;
    width: @w;
    padding: @padding;
    border-radius: @border-radius;
}
.lyteDrillCalCurrentYear,
.lyteDrillCalCurrentMonth {
    .drillCalCurrentYearMixin();
    color: @color;
    border: @border;
}
.lyteDrillCalHeaderButton {
    .drillCalHeaderButtonMixin();
    background: @bg;
    padding: @padding;
    color: @color;
    border: @border;
    border-radius: @border-radius;
    font-size: @font-size;
    cursor: pointer;
}
.lyteDrillCalHeaderButton:hover {
    .drillCalHeaderButtonHoverMixin();
    background: @bg;
}
.lyteDrillCalYearListHeader:hover,
.lyteDrillCalYearListHeader {
    .lyteDrillCalYearListHeaderMixin();
    border-color: @border-color;
    background: @bg;
    cursor: default;
}
.lyteDrillCalHeaderButton .lyteCalsCalMonth {
    .drillCalHeaderButtonCalMonthMixin();
    font-size: @font-size;
}

.lyteCalDisableNav {
    .calDisableNavMixin();
    pointer-events: none;
    opacity: @opacity;
}
/*  Drilldown calendar CSS ENDS   */

.lyteVisuallyHidden {
	.lyteVisuallyHiddenMixin();
}

/*	Calendar weekly selection CSS Begins */
.lyteCalWeekSelType .lyteCalTableCell {
	.lyteCalWeekSelTypeTableCellMixin();
	position: relative;
	border-radius: @border-radius;
}
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalTableCell {
	.lyteCalWeekSelTypeRowHoverTableCellMixin();
	background: @bg;
	color: @color;
}
.lyteCalWeekSelType .lyteCalToday.lyteCalWeekSel,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalToday {
	.lyteCalWeekSelTypeTodayWeekSelMixin();
	border-color: @border-color;
	border-radius: @border-radius;
	color: @color;
}
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalWeekSel,
.lyteCalWeekSel {
	.lyteCalWeekSelMixin();
	background: @bg;
}
.lyteWeekNumContainer .lyteCalWeekSel:nth-child(2),
.lyteWeekNumContainer .lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalTableCell:nth-child(2),
.lyteCalWeekSelType .lyteCalToday.lyteCalWeekSel:first-child,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalToday:first-child,
.lyteCalWeekSelType .lyteCalTableCell:first-child {
	.lyteCalWeekSelTypeFirstTableCellMixin();
	border-radius: @border-radius;
}
.lyteCalWeekSelType .lyteCalToday.lyteCalWeekSel:last-child,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalToday:last-child,
.lyteCalWeekSelType .lyteCalTableCell:last-child {
	.lyteCalWeekSelTypeLastTableCellMixin();
	border-radius: @border-radius;
}
.lyteCalWeekSelType .lyteCalToday,
.lyteCalWeekSelType .lyteCalToday:first-child,
.lyteCalWeekSelType .lyteCalToday:last-child {
	.lyteCalWeekSelTypeTodayCellMixin();
	border-radius: @border-radius;
}
.lyteWeekNumContainer .lyteCalWeekSel:nth-child(2),
.lyteCalWeekSelType .lyteCalWeekSel:first-child,
.lyteCalWeekSelType .lyteCalWeekSel:last-child {
	.lyteCalWeekSelTypeWeekSelFirstAndLastChildMixin();
	color: @color;
	z-index: @z-index;
}
.lyteWeekNumContainer .lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalWeekSel:nth-child(2),
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalWeekSel:first-child,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalWeekSel:last-child {
	.lyteCalWeekSelTypeRowHoverWeekSelFirstAndLastChildMixin();
	color: @color;
}
.lyteCalWeekSel:last-child::before,
.lyteCalWeekSel:first-child::before,
.lyteWeekNumContainer .lyteCalWeekSel:nth-child(2)::before {
	.lyteCalWeekSelFirstAndLastChildBeforeMixin();
	content: '';
	background: @bg;
	position: absolute;
	width: @w;
	height: @h;
	border-radius: @border-radius;
	z-index: @z-index;
}
.lyteWeekNumContainer .lyteCalWeekSel:nth-child(2)::before,
.lyteCalWeekSel:first-child::before {
	.lyteCalWeekSelFirstChildBeforeMixin();
	@{property-left}: @left;
    top: 0;
}
.lyteCalWeekSel:last-child::before {
	.lyteCalWeekSelLastChildBeforeMixin();
	@{property-right}: @right;
    top: 0;
}
.lyteCalWeekSelType .lyteCalTableRow .lyteCalTableCell::after {
	.lyteCalWeekSelTypeTableCellAfterMixin();
	content: '';
	position: absolute;
	@{property-left}: @left;
	width: @w;
	top: @top;
	height: @h;
}
.lyteCalWeekSel::after,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalTableCell::after {
	.lyteCalWeekSelTypeRowHoverTableCellAfterMixin();
	background: @bg;
}
.lyteCalWeekSelType .lyteCalTableRow .lyteCalTableCell:last-child::after {
	content: none;
}
/*	Calendar weekly selection CSS Ends */

/*	Calendar Monthly selection, Yearly Selection CSS Begins */

.lyteCalYearSelType,
.lyteCalMonthSelType {
	.lyteCalMonthSelTypeMixin();
	border-spacing: @border-spacing;
}
.lyteCalYearSelType .lyteCalTableCell,
.lyteCalMonthSelType .lyteCalTableCell {
	.lyteCalMonthSelTypeTableCellMixin();
	height: @h;
	width: @w;
	padding: @padding;
	border-radius: @border-radius;
}
.lyteCalYearSel:hover,
.lyteCalYearSel,
.lyteCalMonthSel:hover,
.lyteCalMonthSel {
	.lyteCalMonthSelMixin();
	background: @bg;
	color: @color;
}
.lyteCalWeekendHeader,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalHoliday,
.lyteCalWeekSelType .lyteCalTableRow:hover .lyteCalWeekend,
.lyteCalHoliday,
.lyteCalWeekend {
	.lyteCalWeekendHolidayMixin();
	color: @color;
}
.lyteWeekNumContainer .lyteCalTableContainer {
	@{property-padding-left}: 0;
	position: relative;
}
.lyteCalTableRowGroup .lyteWeekNumberGrid {
	.lyteWeekNumberGridMixin();
    color: @color;
    font-size: @font-size;
    display: table-cell;
    vertical-align: middle;
    padding: @padding;
    text-align: center;
    width: @w;
    min-width: @min-w;
    height: @h;
	@{property-padding-right}: @padding-right;
}
.lyteWeekNumContainer .lyteCalTableContainer::before {
	.lyteWeekNumContainerTableContainerBeforeMixin();
    content: "";
    position: absolute;
    border-radius: @border-radius;
	border: @border;
	@{property-border-left}: none;
	background: @bg;
    width: @w;
    @{property-left}: @left;
	display: inline-block;
    height: @h;
	z-index: @z-index;
}
.lyteWeekNumberGrid {
	position: relative;
	z-index: 1;
}
.lyteCalTableCellHeader.lyteWeekNumberGrid {
	.lyteCalTableCellHeaderWeekNumGridMixin();
	@{property-padding-right}: @padding-right;
}
.lyteWeekNumberGrid.lyteCalCurWeekNum {
	.lyteCalCurWeekNumMixin();
	color: @color;
}
.lyteWeekNumContainer .lyteCalTableContainer.lyteCalYearSelType::before,
.lyteWeekNumContainer .lyteCalTableContainer.lyteCalMonthSelType::before {
	content: none;
}
.lyteCalHeaderCenterAlign .lyteCalNav {
    order: 1;
}
.lyteCalHeaderCenterAlign .lyteCalsCalMon {
	text-align: center;
}
/*	Calendar Monthly selection, Yearly Selection CSS Ends */

/* import theme overrides - styles */
@import (optional) "../themes/@{calendar}/ui-elements/calendar/calendar.styles.less";




/* import custom css */
@import (optional) "../overrides/ui-elements/calendar.overrides.less";

/*  Calendar related CSS ENDS     */
