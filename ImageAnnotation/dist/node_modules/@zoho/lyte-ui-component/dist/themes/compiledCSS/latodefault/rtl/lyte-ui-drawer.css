/* Default theme imported */
/*	Icon Colors */
/* Loading theme in configuration */
/* Themes of components */
/* Loading custom themes */
/* import theme overrides */
/* import custom css */
/* rtl files loading */
lyte-drawer {
  display: block;
  position: relative;
  max-height: 500px;
  border: 1px solid #ddd;
  color: #444;
}
lyte-drawer.lyteDrawerModal {
  border: 0;
}
.lyteDrawerInlineBody {
  display: flex;
  flex-direction: row;
  position: relative;
  overflow: hidden;
  max-height: inherit;
}
.lyteDrawerPanel {
  width: var(--lyte-drawer-width);
  max-height: inherit;
  outline: 0;
}
.drawerWrapper {
  height: 100%;
  display: flex;
  flex-direction: column;
}
lyte-drawer-body {
  display: block;
  overflow: auto;
}
lyte-drawer-group {
  display: block;
  border-bottom: 1px solid #d6d6d6;
  margin-bottom: 20px;
  padding-bottom: 7px;
}
lyte-drawer-group:last-of-type {
  border-bottom: 0;
  margin-bottom: 0;
  padding-bottom: 0;
}
lyte-drawer-label {
  display: block;
  padding: 10px 10px 3px;
  font-size: 15px;
  font-family: 'LatoBold', 'Open Sans', sans-serif;
  color: #444;
}
lyte-drawer-item {
  position: relative;
  cursor: pointer;
  display: block;
  color: #444;
  padding: 8px 12px;
  font-size: 15px;
  margin: 5px 0;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
}
.lyteDrawerItemFocused {
  background: #eee;
}
lyte-drawer-item.lyteDrawerActiveItem:hover,
.lyteDrawerActiveItem {
  background: #5ba1e5;
  color: #fff;
}
.lyteDrawerDisabledItem {
  pointer-events: none;
  opacity: 0.5;
  background: #d6d6d6;
}
.lyteDrawerContent {
  position: relative;
  flex: 1;
  padding: 40px 15px 15px;
  overflow: auto;
}
lyte-drawer-freeze {
  z-index: 5;
  background: #000;
  transition: opacity var(--lyte-drawer-transition-duration) ease;
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  left: 0;
  opacity: 0;
  display: none;
}
lyte-drawer-freeze.lyteDrawerFreezeLayerShown {
  opacity: 0.3;
}
.lyteDrawerCloseIconWrap,
.lyteDrawerOpenElem {
  cursor: pointer;
  z-index: 5;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  border: 1px solid #ddd;
  box-shadow: 0px 0 3px 1px rgba(0, 0, 0, 0.06);
  background: #fff;
  position: absolute;
  left: -35px;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  top: 5px;
}
.lyteDrawerModal .lyteDrawerOpenElem {
  position: static;
}
.lyteDrawerModal lyte-modal-content:focus {
  outline: none;
}
.lyteDrawerToggleIcon {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -153px -52px;
  width: 11px;
  height: 20px;
  transform: rotate(180deg);
}
.lyteDrawerOpenElem .lyteDrawerToggleIcon {
  transform: rotate(0deg);
}
.lyteDrawerPanelRight .lyteDrawerOpenElem .lyteDrawerToggleIcon {
  transform: rotate(180deg);
}
.lyteDrawerPanelRight .lyteDrawerCloseIconWrap .lyteDrawerToggleIcon {
  transform: rotate(0deg);
}
.lyteDrawerPanelRight .lyteDrawerCloseIconWrap,
.lyteDrawerPanelRight .lyteDrawerOpenElem {
  right: -35px;
  left: unset;
}
.lyteDrawerInlineBody .lyteDrawerPanel {
  transition: transform var(--lyte-drawer-transition-duration) ease;
  position: absolute;
  top: 0;
  bottom: 0;
  background: #fff;
  z-index: 10;
}
.lyteDrawerInlineBody.lyteDrawerPanelLeft .lyteDrawerPanel {
  right: 0;
  transform: translateX(100%);
}
.lyteDrawerInlineBody.lyteDrawerPanelRight .lyteDrawerPanel {
  left: 0;
  transform: translateX(-100%);
}
.lyteDrawerShown.lyteDrawerInlineBody .lyteDrawerPanel {
  transform: translateX(0);
}
.lyteDrawerInlineBody.lyteDrawerInlineDisplace .lyteDrawerContent {
  transition: margin var(--lyte-drawer-transition-duration) ease;
  margin-right: 0;
  margin-left: 0;
}
.lyteDrawerShown.lyteDrawerInlineDisplace.lyteDrawerPanelLeft .lyteDrawerContent {
  margin-right: 200px;
}
.lyteDrawerShown.lyteDrawerInlineDisplace.lyteDrawerPanelRight .lyteDrawerContent {
  margin-left: 200px;
}
.lyteDrawerMiniIcon {
  width: 30px;
  height: 30px;
  display: inline-block;
  background-size: 100%;
  flex-shrink: 0;
}
.lyteDrawerMiniVariant .lyteDrawerCloseIconWrap,
.lyteDrawerMiniVariant .lyteDrawerOpenElem {
  left: -15px;
}
.lyteDrawerPanelRight.lyteDrawerMiniVariant .lyteDrawerCloseIconWrap,
.lyteDrawerPanelRight.lyteDrawerMiniVariant .lyteDrawerOpenElem {
  right: -15px;
}
.lyteDrawerInlineBody.lyteDrawerMiniVariant .lyteDrawerPanel {
  width: var(--lyte-drawer-mini-variant-width);
  overflow: visible;
  transition: width var(--lyte-drawer-transition-duration) ease;
  border-left: 1px solid #ddd;
  transform: translateX(0);
}
.lyteDrawerInlineBody.lyteDrawerPanelRight.lyteDrawerMiniVariant .lyteDrawerPanel {
  border-right: 1px solid #ddd;
  border-left: 0;
}
.lyteDrawerShown.lyteDrawerInlineBody.lyteDrawerMiniVariant .lyteDrawerPanel {
  width: var(--lyte-drawer-width);
}
.lyteDrawerMiniVariant lyte-drawer-body {
  width: 100%;
  overflow: hidden;
  overflow-y: auto;
}
.lyteDrawerMiniVariant lyte-drawer-item {
  display: flex;
}
.lyteDrawerMiniLabel {
  margin-right: 10px;
  white-space: nowrap;
}
.lyteDrawerMiniVariant .drawerWrapper {
  width: 100%;
}
lyte-drawer-actions {
  width: 100%;
  padding: 10px 12px;
  position: relative;
  display: flex;
  justify-content: space-between;
  box-sizing: border-box;
  flex-shrink: 0;
}
.lyteDrawerOverlayShow {
  position: absolute;
  top: 0;
  bottom: 0;
  background: #fff;
  z-index: 1;
}
.lyteDrawerInlineDisplace.lyteDrawerMiniVariant .lyteDrawerContent {
  margin-right: var(--lyte-drawer-mini-variant-width);
}
