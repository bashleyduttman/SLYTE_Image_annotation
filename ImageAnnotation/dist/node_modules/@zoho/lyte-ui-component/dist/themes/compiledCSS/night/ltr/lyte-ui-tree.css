/* Default theme imported */
/*	Icon Colors */
/* Loading theme in configuration */
/* Themes of components */
/*	Icon Colors */
/* Loading custom themes */
/* import theme overrides */
/* import custom css */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
lyte-tree {
  background: #333;
  display: block;
  padding-left: 50px;
  overflow: hidden;
  transition: height 0.2s ease;
}
lyte-tree lyte-yield {
  display: inline-block;
}
lyte-tree-body {
  display: block;
  margin-top: 20px;
}
.lyteTreeBodyDivLastVisibleElem > lyte-tree-body > .mainContainer::after,
.lyteTreeBodyDiv:last-of-type > lyte-tree-body > .mainContainer::after {
  content: '';
  position: absolute;
  width: 3px;
  height: calc(100% - 18px);
  background: #333;
  z-index: 10;
  left: -43px;
  top: 9px;
}
lyte-tree-content {
  display: block;
  cursor: pointer;
  position: relative;
}
lyte-tree lyte-tree lyte-tree-content::before {
  content: '';
  width: 30px;
  height: 1px;
  border-bottom: 1px dashed #888;
  position: absolute;
  left: -38px;
  top: 9px;
}
.mainContainer {
  position: relative;
}
.mainContainer::before {
  content: '';
  width: 1px;
  height: calc(100% - 34px);
  border-left: 1px dashed #888;
  top: 25px;
  position: absolute;
  left: 8px;
}
.lyteTreeNoChildContainer::before {
  content: none;
}
lyte-tree-icon {
  display: inline-block;
  text-align: left;
}
lyte-tree-icon .collapseBox {
  width: 16px;
  height: 16px;
  display: inline-block;
  position: relative;
  vertical-align: middle;
  opacity: 0.7;
}
lyte-tree-icon:hover .collapseBox {
  opacity: 0.8;
}
.lyteTreeOpen .collapseBox,
lyte-tree-icon.open .collapseBox {
  opacity: 0.9;
}
lyte-tree lyte-tree lyte-tree-icon:hover .collapseBox {
  border-color: #ccc;
}
.treeValue {
  display: inline-block;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 14px;
  color: #ccc;
  margin-left: 5px;
  vertical-align: middle;
}
lyte-tree lyte-tree lyte-tree-icon:hover .treeValue {
  color: #fff;
}
.lyteTreeOpen .arrow,
lyte-tree-icon.open .arrow {
  background-image: url(../../images/sprite_lyte_night.svg);
  background-position: -25px -107px;
  width: 16px;
  height: 16px;
  display: inline-block;
  position: absolute;
}
.lyteTreeClose .arrow,
lyte-tree-icon.close .arrow {
  background-image: url(../../images/sprite_lyte_night.svg);
  background-position: -1px -107px;
  width: 16px;
  height: 16px;
  display: inline-block;
  position: absolute;
}
.lyteTreeOpen .treeValue,
lyte-tree-icon.open .treeValue {
  font-family: 'LatoBold', 'Open Sans', sans-serif;
}
.lyteTreeHasNoChild .lyteTreeOpen .treeValue,
.lyteTreeHasNoChild lyte-tree-icon.open .treeValue,
.noChildClass lyte-tree-icon.open .treeValue {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  margin-left: 0;
  margin-top: -3px;
  color: #ccc;
  cursor: default;
}
.lyteTreeHasNoChild .collapseBox,
.noChildClass .collapseBox {
  display: none;
}
.lyteDataTreeNodeWrap {
  padding-left: 12px;
}
.lyteDataTreeNode {
  position: relative;
  display: flex;
  align-items: flex-start;
  margin-bottom: 5px;
  color: #ccc;
}
.lyteDataTreeIndex {
  color: #5ba1e5;
}
.lyteDataTreeNodeContent {
  margin-left: 10px;
}
.lyteDataTreeNodeText {
  color: #357636;
}
.lyteDataTreeObjectNode,
.lyteDataTreeArrayNode {
  cursor: pointer;
}
.lyteDataTreeClosed::before {
  content: '';
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-left: 5px solid #eee;
  display: inline-block;
  position: absolute;
  left: -10px;
  top: 5px;
}
.lyteDataTreeNodeContent > .lyteDataTreeSubLevel > .lyteDataTreeNodeWrap {
  padding-left: 0;
}
.lyteDataTreeNodeContent > .lyteDataTreeSubLevel > .lyteDataTreeNodeWrap > .lyteDataTreeNode {
  position: static;
}
.lyteDataTreeOpened::before {
  content: '';
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 5px solid #eee;
  display: inline-block;
  position: absolute;
  left: -12px;
  top: 8px;
}
.lyteTreeComma:last-of-type {
  display: none;
}
.lyteDataTreeSubLevel {
  padding-left: 0;
}
.lyteDataTreeObjectTextLabel {
  opacity: 0;
}
/*	Lyte Tree Horizontal Related CSS Begins	*/
lyte-tree[lt-prop-structure-type="hierarchy"],
.lyteHTreeChildWrap {
  padding-left: 0;
}
.lyteHTreeParentNode {
  padding: 15px;
  position: relative;
}
.lyteHTreeContentWrap {
  cursor: pointer;
}
.lyteHTreeConnectorLine {
  display: flex;
  position: absolute;
  top: 0;
  left: 0;
  width: 1px;
  height: 100%;
  flex-direction: column;
}
.lyteHTreeVerticalConnectLine {
  background: #555;
  flex-grow: 1;
}
.lyteHTreeHorizontalAfterConnectLine,
.lyteHTreeHorizontalBeforeConnectLine {
  position: absolute;
  height: 1px;
  top: 50%;
  background: #555;
  width: 15px;
}
.lyteHTreeHorizontalBeforeConnectLine {
  left: 0;
}
.lyteHTreeHorizontalAfterConnectLine {
  right: 0;
}
.lyteHTreeVerticalConnectorHidden {
  visibility: hidden;
}
.lyteHTreeHorizontalConnectorHidden {
  display: none;
}
/*	Lyte Tree Horizontal Related CSS Ends	*/
/*	Sortable Tree related LESS Begins	*/
.lyteTreeTopParent.lyteTreeSortable {
  position: relative;
}
.lyteTreeSortableElement {
  position: relative;
  border: solid 1px transparent;
  -webkit-user-select: none;
  user-select: none;
}
.lyteTreeCurrentSortElem {
  cursor: move;
  pointer-events: none;
  background: #eee;
  z-index: 15;
}
.lyteTreeSortable .lyteTreeSortableElement.lyteTreeSortableDropPlaceholderChild {
  z-index: 15;
  border: 1px dashed #5ba1e5;
}
.lyteTreeSortable lyte-tree-body {
  margin-top: 0;
}
.lyteTreeSortable .lyteTreeMainContainer::before {
  left: calc((var(--treeLevel) * 50px) + 8px);
  z-index: 1;
  top: 35px;
}
.lyteTreeSortable .lyteTreeBodyDivLastVisibleElem > lyte-tree-body > .mainContainer::after,
.lyteTreeSortable .lyteTreeBodyDiv:last-of-type > lyte-tree-body > .mainContainer::after {
  left: calc((var(--treeLevel)*50px) - 43px);
  top: 19px;
}
.lyteTreeSortable lyte-tree {
  padding: 0;
}
.lyteTreeSortable lyte-tree-content {
  padding-top: 10px;
  padding-bottom: 10px;
  padding-left: calc(var(--treeLevel) * 50px);
}
.lyteTreeSortable lyte-tree-content::before {
  left: calc((var(--treeLevel) * 50px) - 42px);
  top: 17px;
}
.lyteTreeDragRunning .treeValue {
  user-select: none;
}
.lyteTreeSortable .lyteTreeSortableElement.lyteTreeSortableDropPlaceholderBottom::before,
.lyteTreeSortable .lyteTreeSortableElement.lyteTreeSortableDropPlaceholderTop::before {
  content: '';
  border-left: 5px solid #5ba1e5;
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  width: 0;
  height: 0;
  display: block;
  position: absolute;
  left: 0;
}
.lyteTreeSortableDropPlaceholderTop::before {
  top: -6px;
}
.lyteTreeSortableDropPlaceholderBottom::before {
  bottom: -6px;
}
.lyteTreeSortable .lyteTreeSortableElement.lyteTreeSortableDropPlaceholderBottom::after,
.lyteTreeSortable .lyteTreeSortableElement.lyteTreeSortableDropPlaceholderTop::after {
  content: '';
  display: block;
  position: absolute;
  left: 10px;
  width: 25px;
  height: 2px;
  background: #5ba1e5;
  z-index: 10;
}
.lyteTreeSortableDropPlaceholderTop::after {
  top: -2px;
}
.lyteTreeSortableDropPlaceholderBottom::after {
  bottom: -2px;
}
.lyteTreeDragRunning lyte-tree :not(lyte-tree.lyteTreeClosed) {
  overflow: visible;
}
.lyteTreeMM {
  cursor: move;
}
.lyteTreeSortable .lyteTreeMainContainer::before {
  height: calc(100% - 55px);
}
.lyteTreeSortableDropNotAllowed {
  cursor: not-allowed;
}
/*	Sortable Tree related LESS Ends	*/
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
