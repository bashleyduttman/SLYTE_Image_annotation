var babelParser= require("@babel/parser");
var babelGenerator = require("@babel/generator").default;
module.exports  =  {
    astToString : function(node,sourceMapOptions,code) {
        let options  = {
            comment : true
        };
        if(sourceMapOptions) {
            options = {
                sourceMaps : true,
                sourceFileName : sourceMapOptions.sourceFileName,
                comment : true
            }
        }
        try {
        let result  = babelGenerator(node,options,code);
        
        return  {
            code : result.code,
            map : result.map
        }
        }catch(e) {
            e.message = e.message+(e.loc ? " in the line number "+e.loc.line:'');
            return  {
                error : e
            }
        }
    },

    stringToAst : function(string,file) {

        try {
            return {
                node :  babelParser.parse(string,{
                        ecmaVersion : 11,
                        sourceType : "module",
                        loc : true,
                        comment : true,
                        jsescOption : {
                            'wrap': false
                        }
                })
            }
        } catch(e) {
            e.message = e.message+"in the file name "+file+(e.loc ? " in the line number "+e.loc.line:'');
            return {
                error : e
            }
        }
    }
}
