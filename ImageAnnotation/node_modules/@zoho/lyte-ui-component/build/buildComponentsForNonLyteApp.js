//ignorei18n_start
// Required Modules
const path = require('path');
const fs = require('fs');
const child_process = require('child_process');
const logger = require('./logger.js');
// Global Variables
const basePath = process.env.INIT_CWD || process.argv[2];
const spawn = child_process.spawn;
// Main Function
logger.info(`${basePath} : this is the basePath used in postinstall hook`)
const buildJsPath = path.join( basePath, 'build', 'build.js');
const isBuildFilePresent = fs.existsSync(buildJsPath);
if (isBuildFilePresent) {
	logger.highlight(`${buildJsPath} - Lyte Configuration File found. Skipping dependency installation process`);
} else {
	const uiCompPath = path.join(basePath, 'node_modules', '@zoho', 'lyte-ui-component' );
	const cliPath = path.join(basePath, 'node_modules', '@zoho', 'lyte-cli' );
	let  uiCompBuildProcess;
	if(process.platform == "win32") {
		 uiCompBuildProcess = spawn( path.join( cliPath, "bin", "lyte.bat" ), ['build', '--production'], { cwd: uiCompPath });
	} else {
		 uiCompBuildProcess = spawn( path.join( cliPath, "bin", "lyte" ), ['build', '--production'], { cwd: uiCompPath });
	}
	
	
	uiCompBuildProcess.stdout.on('data', dataStream => logger.success(dataStream.toString()));
	uiCompBuildProcess.stderr.on('data', errorStream => logger.error(errorStream.toString()));
	uiCompBuildProcess.on('close', code => {
		if (code !== 0) {
			logger.error('Installation Failed.Command exited with code: ' + code);
		} else {
			logger.success('Installation Process complete');
		}
	})
}
//ignorei18n_end
