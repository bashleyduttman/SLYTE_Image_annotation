var execSync = function(cmd) {require("child_process").execSync(cmd,{stdio: [process.stdin, process.stdout, process.stderr]})};
execSync("rm -rf node_modules")
execSync("npm install --registry htt"+"p://cm-npmregistry.csez.zohocorpin.com")

var fs = require('fs-extra');
var versions;

if (fs.existsSync("./npm-versions.js")) {
    versions = JSON.parse(fs.readFileSync("./npm-versions.js", 'utf8'));
} else {
    versions = [
        {
            name : "core",
            git : "htt"+"ps://git.csez.zohocorpin.com/lyte.js/lyte.git",
            folder: "./node_modules/@slyte/core",
            branch : "external-v1.0"
        }, {
            name : "router",
            git : "htt"+"ps://git.csez.zohocorpin.com/lyte.js/lyte-router.git",
            folder: "./node_modules/@slyte/router",
            branch : "external-v1.0"
        },
        {
            name : "component",
            git : "htt"+"ps://git.csez.zohocorpin.com/lyte.js/lyte-component.git",
            folder: "./node_modules/@slyte/component",
            branch : "external-v1.0"
        },
        {
            name : "data",
            git : "htt"+"ps://git.csez.zohocorpin.com/lyte.js/lyte-data.git",
            folder: "./node_modules/@slyte/data",
            branch : "external-v1.0"
        }
    ]
}

versions.forEach(function(package) {
    if(fs.existsSync(package.folder) ) {
        fs.removeSync(package.folder)
    }
    execSync('git clone '+package.git+' '+package.folder+' -b '+package.branch);
    if(package.name == "component"){
        execSync('cd '+package.folder+' && node build/prepublish.js');
    }
})



