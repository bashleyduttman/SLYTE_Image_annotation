/* Default theme imported */
@import "../themes/default/ui-elements/nav/nav.variables.less";




/* Loading theme in configuration */
@import "../config.less";
@import (optional) "../themes/@{nav}/ui-elements/nav/nav.variables.less";

/* rtl files loading */

@import (multiple,optional) "../themes/default/global/@{direction}.less";

@import (multiple,optional) "../themes/@{nav}/global/@{direction}.less";


/* Loading final tweaks to your variables */
@import (optional) "../overrides/ui-elements/nav.variables.less";


/*  Navbar related CSS BEGINS */
lyte-nav {
	.nav();
	display: flex;
	background: @bg;
}
lyte-nav-group,
lyte-nav > lyte-yield {
	display: flex;
}
lyte-nav lyte-nav-item {
	.navItem();
	padding: @padding;
	font-family: @primaryFont;
	font-size: @font-size;
	color: @color;
	cursor: pointer;
}
lyte-nav lyte-nav-item:hover {
	.navItemHover();
	background: @bg;
}
lyte-nav-item.lyteNavActive,
lyte-nav-item.lyteNavActive:hover {
	.navActive();
	background: @bg;
    color: @color;
}
.lyteNavVertical {
	.navVertical();
	height: @h;
	overflow: hidden;
	flex-direction: column;
}
.lyteNavVertical > lyte-yield {
	flex-direction: column;
}
.lyteNavDiv {
	display: flex;
	flex-direction: column;
}
lyte-nav lyte-arrow {
	.navArrow();
	position: relative;
	height: @h;
	box-shadow: @box-shadow;
    -webkit-user-select: none;
    -webkit-touch-callout: none;
}
.lyteNavDiv + lyte-arrow {
	.lyteNavDivArrow();
	box-shadow: @box-shadow;
}
.arrow-down,
.arrow-up {
	.navArrowUp();
	position: absolute;
	width: 0;
	height: 0;
	top: @top;
	left: @left;
	border-left: @border-left;
	border-right: @border-right;
	border-bottom: @border-bottom;
}
.arrow-down {
	.navArrowDown();
    top: @top;
	border-bottom: 0;
	border-top: @border-top;
}
.lyteNavKebabMenu {
    .navKebabMenu();
	& when (@useCssMaskForBg = true) {
		.lyteMaskBgMixin(@mask-img, @mask-pos, @bg-color);
	}
	& when not (@useCssMaskForBg = true) {
		background-image: @bg-img;
		background-position: @bg-pos;
	}
    width: @w;
    height: @h;
}
.lyteNavIconContainer {
    .navKebabIconCont();
    display: inline-flex;
    align-items: center;
    padding: @padding;
    cursor: pointer;
}
.lyteNavIconContainer:hover,
.lyteNavIconContainer.lyteMenuSelected {
    .navKebabIconContHover();
    background: @background;
}

lyte-nav[lt-prop-alignment="vertical"] .lyteNavDivFullHeight.lyteNavDiv {
	height: 100%;
}

.lyteVisuallyHidden {
	.lyteVisuallyHiddenMixin();
}


lyte-nav-menu-icon {
	.lyteNavMenuIconMixin();
	display: inline-flex;
	justify-content: center;
	align-items: center;
	width: @w;
	height: @h;
	border-radius: @border-radius;
	margin-inline-start: @margin-inline-start;
}
lyte-nav-menu-icon::after {
	.lyteNavMenuIconAfterMixin();
	content: "";
	.lyteMaskBgMixin(@mask-img, @mask-pos, @bg-color);
	width: @w;
	height: @h;
	transform: @transform;
}


lyte-nav-item.lyteMenuSelected {
	.LyteNavItemLyteMenuSelectedMixin();
	background: @bg;
}
lyte-nav-item.lyteNavActive.lyteMenuSelected {
	.LyteNavItemLyteNavActiveLyteMenuSelectedMixin();
	background: @bg;
}

lyte-nav-menu-icon:hover {
	.LyteNavMenuIconHoverMixin();
	background: @bg;
}

.lyteMenuSelected lyte-nav-menu-icon {
	.lyteMenuSelectedMenuIconMixin();
	background: @bg;
}

.lyteMenuSelected lyte-nav-menu-icon::after {
	.lyteMenuSelectedLyteNavMenuIconAfter();
	background-color: @bg;
}
lyte-nav-menu-icon:hover::after {
	.lyteNavMenuIconHoverAfterMixin();
	background-color: @bg;
}

.lyteNavActive lyte-nav-menu-icon {
	.lyteNavActiveLyteMavMenuIconMixin();
	background: @bg;
}
.lyteNavActive lyte-nav-menu-icon::after {
	.lyteNavActiveLyteNavMenuIconAfterMixin();
	background-color: @bg-color;
}

.lyteNavActive.lyteMenuSelected lyte-nav-menu-icon,
.lyteNavActive lyte-nav-menu-icon:hover {
	.lyteNavActiveLyteNavMenuIconHoverMixin();
	background: @bg;
}

.lyteNavActive.lyteMenuSelected lyte-nav-menu-icon::after,
.lyteNavActive lyte-nav-menu-icon:hover::after {
	.lyteNavActivelyteNavMenuIconHoverAfterMixin();
	background-color: @bg-color;
}

.lyteNavHorizontal {
    align-items: center;
}
.lyteNavBento {
	.lyteNavBentoMixin();
	width: @width;
	height: @height;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    position: relative;
    margin: @margin;
}

.lyteNavCandyboxIcon {
	.lyteNavCandyboxIconMixin();
	width: @width;
	height: @height;
    position: absolute;
    background: @bg;
    opacity: 1;
    transition: 0.6s;
}

.lyteNavCandyboxZIcon {
	.lyteNavCandyboxZIconMixin();
    position: absolute;
    top: @top;
    right: @right;
    width: @w;
    height: @h;
}

.lyteNavCandyboxZIconPath1,
.lyteNavCandyboxZIconPath2 {
    fill: none;
    stroke:  #555;
    stroke-width: 8;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-miterlimit: 10;
    animation: zline0-r .5s .15s linear forwards;
    transition: opacity .5s .15s ease-in-out;
    opacity: 0;
}

.lyteNavCandyboxZIconPath1 {
    stroke-dasharray: 600;
}

.lyteNavCandyboxZIconPath2 {
    stroke-dasharray: 300;
}

.lyteNavBento:hover .lyteNavCandyboxIcon {
    transform: scale(0);
    opacity: 0;
}

.lyteNavBento:hover .lyteNavCandyboxZIconPath1 {
    animation: zline0 .5s .15s linear forwards;
    transition: opacity .5s .15s ease-in-out;
    opacity: 1;
}

.lyteNavBento:hover .lyteNavCandyboxZIconPath2 {
    animation: zline1 .5s .15s linear forwards;
    transition: opacity .5s .15s ease-in-out;
    opacity: 1;
}

@keyframes zline0 {
    from {
        stroke-dashoffset: -300;
    }
    to {
        stroke-dashoffset: 0;
    }
}

@keyframes zline0-r {
    from {
        stroke-dashoffset: 0;
    }
    to {
        stroke-dashoffset: -300;
    }
}

@keyframes zline1 {
    from {
        stroke-dashoffset: 300;
    }
    to {
        stroke-dashoffset: 0;
    }
}

/* import theme overrides - styles */
@import (optional) "../themes/@{nav}/ui-elements/nav/nav.styles.less";




/* import custom css */
@import (optional) "../overrides/ui-elements/nav.overrides.less";

/*  Navbar related CSS BEGINS */
