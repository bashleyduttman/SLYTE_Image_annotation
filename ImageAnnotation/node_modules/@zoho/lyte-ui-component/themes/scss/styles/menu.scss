@use "sass:map";

@use "../default/global/global.variables.scss" as *;

@use "../default/global/rtl.scss" as *;

@forward "../default/variables/menu.variables.scss";

@use "../default/variables/menu.variables.scss" as *;


lyte-menu-box {
	box-sizing: border-box;
	z-index: map.get($lyteMenuBoxMap, "z-index");
	vertical-align: middle;
	width: auto;
	position: absolute;
	top: map.get($lyteMenuBoxMap, "top");
    #{$property-left}: map.get($lyteMenuBoxMap, "left");
	outline: none;
	font-family: $primaryFont;
    box-shadow: map.get($lyteMenuBoxMap, "box-shadow");
    border-radius: map.get($lyteMenuBoxMap, "border-radius");
    @include addExtraStyles($lyteMenuBoxMap);
}
lyte-menu-body {
	overflow: auto;
	display: block;
	outline: none;
	background: map.get($lyteMenuBodyMap, "background");
	border: map.get($lyteMenuBodyMap, "border");
    border-radius: map.get($lyteMenuBodyMap, "border-radius");
    padding: map.get($lyteMenuBodyMap, "padding");
    @include addExtraStyles($lyteMenuBodyMap);
}
lyte-menu-item {
	position: relative;
	cursor: pointer;
	display: flex;
    white-space: nowrap;
	text-align: $value-textalign-left;
	font-size: map.get($lyteMenuItemMap, "font-size");
	padding: map.get($lyteMenuItemMap, "padding");
    z-index: map.get($lyteMenuItemMap, "z-index");
    color: map.get($lyteMenuItemMap, "color");
    @include addExtraStyles($lyteMenuItemMap);
}
.lyteMenuSelection {
	background: map.get($lyteMenuSelectionMap, "background");
    @include addExtraStyles($lyteMenuSelectionMap);
}
lyte-menu-label {
	font-size: map.get($lyteMenuLabelMap, "font-size");
	color: map.get($lyteMenuLabelMap, "color");
	#{$property-margin-right}: map.get($lyteMenuLabelMap, "margin-right");
	white-space: normal;
	word-break: break-word;
    @include addExtraStyles($lyteMenuLabelMap);
}
lyte-menu-header {
	display: block;
	height: auto;
	color: map.get($lyteMenuHeaderMap, "color");
	font-family: $secondaryFont;
	font-size: map.get($lyteMenuHeaderMap, "font-size");
	text-align: $value-textalign-left;
	cursor: default;
	padding: map.get($lyteMenuHeaderMap, "padding");
    @include addExtraStyles($lyteMenuHeaderMap);
}
lyte-menu-description {
	font-size: map.get($lyteMenuDescriptionMap, "font-size");
    #{$property-margin-left}: auto;
	opacity: map.get($lyteMenuDescriptionMap, "opacity");
    color: map.get($lyteMenuDescriptionMap, "color");
    @include addExtraStyles($lyteMenuDescriptionMap);
}
lyte-menu-group {
	border-bottom: map.get($lyteMenuGroupMap, "border-bottom");
	display: block;
	padding: map.get($lyteMenuGroupMap, "padding");
    @include addExtraStyles($lyteMenuGroupMap);
}
lyte-menu-group:first-of-type {
	border-top: map.get($lyteMenuGroupFirstOfTypeMap, "border-top");
    padding-top: map.get($lyteMenuGroupFirstOfTypeMap, "padding-top");
    @include addExtraStyles($lyteMenuGroupFirstOfTypeMap);
}
lyte-menu-group:last-of-type {
	border-bottom: map.get($lyteMenuGroupLastOfTypeMap, "border-bottom");
    padding-bottom: map.get($lyteMenuGroupLastOfTypeMap, "padding-bottom");
    @include addExtraStyles($lyteMenuGroupLastOfTypeMap);
}
lyte-menu-group:last-of-type + lyte-menu-item {
	border-top: map.get($lyteMenuLastGroupItemMap, "border-top");
    @include addExtraStyles($lyteMenuLastGroupItemMap);
}
lyte-menu {
	display: none;
}
.lytemenufreezelayer {
	opacity: map.get($lyteMenufreezelayerMap, "opacity");
	background: map.get($lyteMenufreezelayerMap, "background");
	position: fixed;
	z-index: map.get($lyteMenufreezelayerMap, "z-index");
    @include addExtraStyles($lyteMenufreezelayerMap);
}
.lytemenufreezelayer.top {
	top: 0;
	width: 100%;
}
.lytemenufreezelayer.bottom {
	bottom: 0;
	width: 100%;
}
.lytemenufreezelayer.left {
	left: 0;
}
.lytemenufreezelayer.right {
	right: 0;
	width: 100%;
}
.lytemenufreezelayer.nogroup {
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
}
.lyteMenuWrapperDiv {
	overflow: auto;
}
lyte-menu-box .lyteArrow {
    width: map.get($lyteMenuArrowIconMap, "width");
    height: map.get($lyteMenuArrowIconMap, "height");
    position: absolute;
    background: map.get($lyteMenuArrowIconMap, "background");
    transform: rotate(45deg);
    @include addExtraStyles($lyteMenuArrowIconMap);
}
lyte-menu-box .lyteArrow::after,
lyte-menu-box .lyteArrow::before {
    content: none;
}
lyte-menu-box .lyteArrow.lyteArrowTop {
    box-shadow: map.get($lyteMenuArrowIconTopMap, "box-shadow");
    top: map.get($lyteMenuArrowIconTopMap, "top");
    @include addExtraStyles($lyteMenuArrowIconTopMap);
}
lyte-menu-box .lyteArrow.lyteArrowBottom {
    box-shadow: map.get($lyteMenuArrowIconBottomMap, "box-shadow");
    bottom: map.get($lyteMenuArrowIconBottomMap, "bottom");
    @include addExtraStyles($lyteMenuArrowIconBottomMap);
}
lyte-menu-box .lyteArrow.lyteArrowLeft {
    box-shadow: map.get($lyteMenuArrowIconLeftMap, "box-shadow");
    #{$property-left}: map.get($lyteMenuArrowIconLeftMap, "left");
    @include addExtraStyles($lyteMenuArrowIconLeftMap);
}
lyte-menu-box .lyteArrow.lyteArrowRight {
    box-shadow: map.get($lyteMenuArrowIconRightMap, "box-shadow");
    #{$property-right}: map.get($lyteMenuArrowIconRightMap, "right");
    #{$property-left}: unset;
    @include addExtraStyles($lyteMenuArrowIconRightMap);
}
.lyteMenuHidden {
	display: none !important;
}
lyte-menu-box.lyteAnimate {
    transition: top 0.4s ease;
}
lyte-menu-box.lyteAnimate lyte-menu-body{
    transition: height 0.4s ease;
    overflow: hidden;
}

.lyteHoverMenu lyte-menu-body::before {
    content: '';
    position: absolute;
}
.lyteHoverMenu.topPlace lyte-menu-body::before,
.lyteHoverMenu.bottomPlace lyte-menu-body::before {
    height: map.get($lyteHoverMenuTopBottomBodyBeforeMap, "height");
    left: 0;
    right: 0;
    @include addExtraStyles($lyteHoverMenuTopBottomBodyBeforeMap);
}
.lyteHoverMenu.leftPlace lyte-menu-body::before,
.lyteHoverMenu.rightPlace lyte-menu-body::before {
    width: map.get($lyteHoverMenuLeftRightBodyBeforeMap, "width");
    top: 0;
    bottom: 0;
    @include addExtraStyles($lyteHoverMenuLeftRightBodyBeforeMap);
}
.lyteHoverMenu.bottomPlace lyte-menu-body::before {
    top: map.get($lyteHoverMenuBottomBodyBeforeMap, "top");
    @include addExtraStyles($lyteHoverMenuBottomBodyBeforeMap);
}
.lyteHoverMenu.topPlace lyte-menu-body::before {
    bottom: map.get($lyteHoverMenuTopBodyBeforeMap, "bottom");
    @include addExtraStyles($lyteHoverMenuTopBodyBeforeMap);
}
.lyteHoverMenu.leftPlace lyte-menu-body::before {
    right: map.get($lyteHoverMenuLeftBodyBeforeMap, "right");
    @include addExtraStyles($lyteHoverMenuLeftBodyBeforeMap);
}
.lyteHoverMenu.rightPlace lyte-menu-body::before {
    left: map.get($lyteHoverMenuRightBodyBeforeMap, "left");
    @include addExtraStyles($lyteHoverMenuRightBodyBeforeMap);
}
.lyteBodyWrapper {
    overflow: hidden;
}
.lyteMenuItemDisabled {
	opacity: map.get($lyteMenuItemDisabledMap, "opacity");
	cursor: map.get($lyteMenuItemDisabledMap, "cursor");
    @include addExtraStyles($lyteMenuItemDisabledMap);
}

.lyteMenuAccordionContainer {
	display: flex;
	flex-direction: column;
	padding: map.get($lyteMenuAccordionContainerMap, "padding");
    @include addExtraStyles($lyteMenuAccordionContainerMap);
}
.lyteMenuAccordionItem {
	transition: height 0.5s linear;
	overflow: hidden;
}

.lyteMenuAccordionItem lyte-menu-item {
	#{$property-padding-left}: map.get($lyteMenuAccordionItemLyteMenuItemMap, "padding-left");
    @include addExtraStyles($lyteMenuAccordionItemLyteMenuItemMap);
}

.lyteMenuAccordionClosed .lyteMenuAccordionItem {
	height: map.get($lyteMenuAccordionClosedLyteMenuAccordionItemMap, "height");
    @include addExtraStyles($lyteMenuAccordionClosedLyteMenuAccordionItemMap);
}

.lyteMenuAccordionContainer.lyteMenuSelection {
	background: transparent;
}

.lyteMenuAccordionContainer > lyte-menu-label {
	padding: map.get($lyteMenuAccordionContainerLyteMenuLabelMap, "padding");
	#{$property-margin-right}: map.get($lyteMenuAccordionContainerLyteMenuLabelMap, "margin-right");
	position: relative;
    @include addExtraStyles($lyteMenuAccordionContainerLyteMenuLabelMap);
}

.lyteMenuAccordionContainer.lyteMenuSelection > lyte-menu-label {
	background: map.get($lyteMenuAccordionContainerLyteMenuSelectionLyteMenuLabelMap, "background");
    @include addExtraStyles($lyteMenuAccordionContainerLyteMenuSelectionLyteMenuLabelMap);
}

.lyteMenuAccordionContainer > lyte-menu-label::after {
	content: '';
	display: inline-block;
	background-image: map.get($lyteMenuAccordionContainerArrowIconMap, "background-image");
	background-position: map.get($lyteMenuAccordionContainerArrowIconMap, "background-position");
	width: map.get($lyteMenuAccordionContainerArrowIconMap, "width");
	height: map.get($lyteMenuAccordionContainerArrowIconMap, "height");
	position: absolute;
	top: map.get($lyteMenuAccordionContainerArrowIconMap, "top");
	#{$property-right}: map.get($lyteMenuAccordionContainerArrowIconMap, "right");
	transform: map.get($lyteMenuAccordionContainerArrowIconMap, "transform");
	transition: map.get($lyteMenuAccordionContainerArrowIconMap, "transition");
    @include addExtraStyles($lyteMenuAccordionContainerArrowIconMap);
}
.lyteMenuAccordionOpened.lyteMenuAccordionContainer > lyte-menu-label::after {
	transform: map.get($lyteMenuAccordionContainerOpenedArrowIconMap, "transform");
    @include addExtraStyles($lyteMenuAccordionContainerOpenedArrowIconMap);
}

