@use "sass:map";

@use "../default/global/global.variables.scss" as *;

@use "../default/global/rtl.scss" as *;

@forward "../default/variables/daterangepicker.variables.scss";

@use "../default/variables/daterangepicker.variables.scss" as *;


lyte-daterangepicker {
	display: inline-block;
}
lyte-daterangepicker * {
    box-sizing: content-box;
}
.lyteDateRangePickerRow {
    font-family: $primaryFont;
    display: flex;
    box-shadow: map.get($lyteDateRangePickerRowMap, "box-shadow");
    border: map.get($lyteDateRangePickerRowMap, "border");
    background: map.get($lyteDateRangePickerRowMap, "background");
    @include addExtraStyles($lyteDateRangePickerRowMap);
}
.lyteDateRangePickerRow .lyteCalendarPopup {
	box-shadow: none;
	border: none;
}
.lyteDateRangePickerCol1,
.lyteDateRangePickerCol2 {
	position: relative;
}
.lyteDateRangePickerRow .lyteCalBtns {
	display: none;
}
.lyteDateRPMonthHeader {
	text-align: center;
	font-size: map.get($lyteDateRPMonthHeaderMap, "font-size");
	padding: map.get($lyteDateRPMonthHeaderMap, "padding");
    @include addExtraStyles($lyteDateRPMonthHeaderMap);
}
.lyteDateRPLeftNav {
	position: absolute;
	top: map.get($lyteDateRPLeftNavMap, "top");
    #{$property-left}: map.get($lyteDateRPLeftNavMap, "left");
    @include addExtraStyles($lyteDateRPLeftNavMap);
}
.lyteDateRPRightNav {
	top: map.get($lyteDateRPRightNavMap, "top");
    #{$property-right}: map.get($lyteDateRPRightNavMap, "right");
	position: absolute;
    @include addExtraStyles($lyteDateRPRightNavMap);
}
.monthDD {
	max-width: map.get($lyteMonthDDMap, "max-width");
    #{$property-margin-right}: map.get($lyteMonthDDMap, "margin-right");
	width: auto;
    @include addExtraStyles($lyteMonthDDMap);
}
.monthDD lyte-drop-button {
    font-size: map.get($lyteMonthDDDropBtnMap, "font-size");
    @include addExtraStyles($lyteMonthDDDropBtnMap);
}
.yearDD {
	width: auto;
}
.yearDD lyte-drop-button {
    font-size: map.get($lyteYearDDDropBtnMap, "font-size");
    @include addExtraStyles($lyteYearDDDropBtnMap);
}
.dRPCalendar2 .lyteCalTableContainer {
    #{$property-border-left}: map.get($lyteDRPCalendar2TableContainerMap, "border-left");
    @include addExtraStyles($lyteDRPCalendar2TableContainerMap);
}
.lyteDateRPTempFirstDateSelected,
.lyteDateRPTempLastDateSelected,
.lyteDateRPFirstDateSelected,
.lyteDateRPLastDateSelected,
.lyteDateRPTempSelected.lyteDateRPTempFirstDateSelected:hover,
.lyteDateRPTempSelected.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPTempFirstDateSelected:hover,
.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPFirstDateSelected:hover,
.lyteDateRPLastDateSelected:hover {
	color: map.get($lyteDateRPLastDateSelectedHoverMap, "color");
	position: relative;
	z-index: 0;
	background: map.get($lyteDateRPLastDateSelectedHoverMap, "background");
	border-radius: map.get($lyteDateRPLastDateSelectedHoverMap, "border-radius");
	border-color: transparent;
    @include addExtraStyles($lyteDateRPLastDateSelectedHoverMap);
}
.lyteDateRPTempSelected.lyteDateRPTempLastDateSelected,
.lyteDateRPTempLastDateSelected,
.lyteDateRPLastDateSelected,
.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPLastDateSelected:hover {
	background: map.get($lyteDateRPLastDateSelHoverBgMap, "background");
	border-radius: map.get($lyteDateRPLastDateSelHoverBgMap, "border-radius");
    color: map.get($lyteDateRPLastDateSelHoverBgMap, "color");
    @include addExtraStyles($lyteDateRPLastDateSelHoverBgMap);
}
.lyteDateRPTempFirstDateSelected::before,
.lyteDateRPFirstDateSelected::before,
.lyteDateRPTempLastDateSelected::before,
.lyteDateRPLastDateSelected::before {
	content: '';
	width: 100%;
	height: 100%;
	background: map.get($lyteDateRPLastDateSelectedBeforeMap, "background");
	display: block;
	position: absolute;
	top: map.get($lyteDateRPLastDateSelectedBeforeMap, "top");
    #{$property-left}: map.get($lyteDateRPLastDateSelectedBeforeMap, "left");
	z-index: -1;
	border-radius: map.get($lyteDateRPLastDateSelectedBeforeMap, "border-radius");
    @include addExtraStyles($lyteDateRPLastDateSelectedBeforeMap);
}
.lyteDateRPMonthStartDate,
.lyteDateRPMonthEndDate,
.lyteDateRPTempSelected {
	border-radius: 0;
	background: map.get($lyteDateRPTempSelectedMap, "background");
	position: relative;
    color: map.get($lyteDateRPTempSelectedMap, "color");
    @include addExtraStyles($lyteDateRPTempSelectedMap);
}
.lyteDateRPTempFirstDateSelected {
	border-radius: map.get($lyteDateRPTempFirstDateSelectedMap, "border-radius");
    @include addExtraStyles($lyteDateRPTempFirstDateSelectedMap);
}
.lyteDateRPTempFirstDateSelected::after,
.lyteDateRPFirstDateSelected::after,
.lyteDateRPMonthStartDate::after,
.lyteDateRPTempSelected::after {
	content: '';
	position: absolute;
	#{$property-left}: map.get($lyteDateRPTempSelectedAfterMap, "left");
	width: map.get($lyteDateRPTempSelectedAfterMap, "width");
	background: map.get($lyteDateRPTempSelectedAfterMap, "background");
	top: map.get($lyteDateRPTempSelectedAfterMap, "top");
    height: map.get($lyteDateRPTempSelectedAfterMap, "height");
    @include addExtraStyles($lyteDateRPTempSelectedAfterMap);
}
.lyteDateRPFirstDateSelected:last-of-type,
.lyteDateRPTempFirstDateSelected:last-of-type,
.lyteDateRPLastDateSelected:first-child,
.lyteDateRPTempLastDateSelected:first-child,
.lyteDateRPTempLastDateSelected.lyteCalTableCell:first-child:hover {
	background: transparent;
}
.lyteDateRPTempFirstDateSelected,
.lyteDateRPTempLastDateSelected,
.lyteDateRPFirstDateSelected,
.lyteDateRPLastDateSelected {
    color: map.get($lyteDRPSelectedEndPointsMap, "color");
    @include addExtraStyles($lyteDRPSelectedEndPointsMap);
}
.lyteDateRPTempSelected:hover {
	background: map.get($lyteDateRPTempSelectedHoverMap, "background");
	color: map.get($lyteDateRPTempSelectedHoverMap, "color");
	border-radius: map.get($lyteDateRPTempSelectedHoverMap, "border-radius");
    @include addExtraStyles($lyteDateRPTempSelectedHoverMap);
}
.lyteCalTableCell.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPMonthEndDate,
.lyteDateRPTempSelected:last-of-type,
.lyteCalTableCell.lyteDateRPTempSelected:last-of-type:hover {
    border-radius: map.get($lyteDRPRightCurveMap, "border-radius");
    @include addExtraStyles($lyteDRPRightCurveMap);
}
.lyteDateRPMonthStartDate,
.lyteDateRPTempSelected:first-of-type,
.lyteDateRPTempSelected:first-of-type:hover {
    border-radius: map.get($lyteDRPLeftCurveMap, "border-radius");
    @include addExtraStyles($lyteDRPLeftCurveMap);
}
.lyteDateRPMonthEndDate:first-of-type {
    border-radius: map.get($lyteDRPEndDateLeftCurveMap, "border-radius");
    @include addExtraStyles($lyteDRPEndDateLeftCurveMap);
}
.lyteDateRPTempSelected:last-of-type::after,
.lyteDateRPFirstDateSelected:last-of-type::after,
.lyteDateRPTempFirstDateSelected:last-of-type::after,
.lyteDateRPTempLastDateSelected::after,
.lyteDateRPLastDateSelected::after {
	width: 0;
}
.lyteDateRPTempFirstDateSelected.lyteDateRPTempLastDateSelected,
.lyteDateRPFirstDateSelected.lyteDateRPLastDateSelected {
	background: map.get($lyteDRPLastandFirstSelMap, "background");
    @include addExtraStyles($lyteDRPLastandFirstSelMap);
}
.lyteDateRPTempFirstDateSelected.lyteDateRPMonthEndDate,
.lyteDateRPMonthEndDate.lyteDateRPFirstDateSelected {
    background: map.get($lyteDRPMonthEndFirstDateMap, "background");
    border-radius: map.get($lyteDRPMonthEndFirstDateMap, "border-radius");
    @include addExtraStyles($lyteDRPMonthEndFirstDateMap);
}
.lyteDateRPInterimEndDate::after,
.lyteDateRPTempFirstDateSelected.lyteDateRPMonthEndDate::after,
.lyteDateRPMonthEndDate.lyteDateRPFirstDateSelected::after {
    content: none;
}
.lyteDateRPMonthStartDate.lyteDateRPTempLastDateSelected,
.lyteDateRPMonthStartDate.lyteDateRPLastDateSelected {
    background: map.get($lyteDRPMonthStartLastDateMap, "background");
    @include addExtraStyles($lyteDRPMonthStartLastDateMap);
}

.lyteDateRPInterimEndDate:hover,
.lyteDateRPInterimEndDate.lyteDateRPTempSelected:first-of-type,
.lyteDateRPInterimEndDate {
    #{$property-border-top-right-radius}: map.get($lyteDRPInterimEndDateMap, "border-top-right-radius");
    #{$property-border-bottom-right-radius}: map.get($lyteDRPInterimEndDateMap, "border-bottom-right-radius");
    @include addExtraStyles($lyteDRPInterimEndDateMap);
}
.lyteDateRPInterimStartDate.lyteDateRPTempSelected.lyteDateRPTempLastDateSelected,
.lyteDateRPInterimStartDate.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPInterimStartDate:hover,
.lyteDateRPInterimStartDate {
    #{$property-border-top-left-radius}: map.get($lyteDRPInterimStartDateMap, "border-top-left-radius");
    #{$property-border-bottom-left-radius}: map.get($lyteDRPInterimStartDateMap, "border-bottom-left-radius");
    @include addExtraStyles($lyteDRPInterimStartDateMap);
}
.lyteCalToday.lyteDateRPTempSelected {
	border-color: map.get($lyteDateRPTempSelectedTodayMap, "border-color");
    @include addExtraStyles($lyteDateRPTempSelectedTodayMap);
}
/*------- Added by Sam-------*/
.lyteDateRPNavDisabled{
	opacity: 0.3;
	pointer-events: none;
}
.lyteSeperateDRP .lyteDateRPFirstDateSelected, 
.lyteSeperateDRP .lyteDateRPLastDateSelected{
	border-radius: 50%;	    
}
.lyteSeperateDRP .lyteDateRPFirstDateSelected:after{
	display: none;    
}
.lyteDateRangePickerRow .lyteCalTableCell{
	touch-action: none;
}
/*------- Added for ltPropHeaderType option -------*/
.lyteDateRPStringHeader{
    padding-top: 17px;
    font-size: 18px;
    color: #666;
}
/*------- Added for ltPropFillRows option -------*/
lyte-daterangepicker .lyteCalDiffMonth{
    pointer-events: none;
    opacity: 0.4;
}
.lyteAllowOtherMonthSelection {
	.lyteCalDiffMonth {
		pointer-events: auto;
	}
	.lyteCalDisabled {
		pointer-events: none;
	}
	.lyteDateRPFirstDateSelected,
	.lyteDateRPTempSelected,
	.lyteDateRPLastDateSelected,
	.lyteCalDiffMonth:hover {
		opacity: 1;
	}
}
