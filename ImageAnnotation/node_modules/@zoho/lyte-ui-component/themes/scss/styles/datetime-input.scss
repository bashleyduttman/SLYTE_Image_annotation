@use "sass:map";

@use "../default/global/global.variables.scss" as *;

@use "../default/global/rtl.scss" as *;

@forward "../default/variables/datetime-input.variables.scss";

@use "../default/variables/datetime-input.variables.scss" as *;

lyte-datetime-input {
	display: inline-block;
}
.lyteDateTimeInputWrapper {
	display: flex;
    position: relative;
}
.lyteDateTimeInputBox .lyteDateTimeInputWrapper {
	border: map.get($lyteDateTimeInputBoxWrapperMap, "border");
	border-radius: map.get($lyteDateTimeInputBoxWrapperMap, "border-radius");
    align-items: center;
	@include addExtraStyles($lyteDateTimeInputBoxWrapperMap);
}
.lyteDateTimeInputBox:hover .lyteDateTimeInputWrapper {
	border: map.get($lyteDateTimeInputBoxHoverWrapperMap, "border");
    @include addExtraStyles($lyteDateTimeInputBoxHoverWrapperMap);
}
.lyteDateInputOpened.lyteDateTimeInputBox .lyteDateTimeInputWrapper,
.lyteDateInputFocused.lyteDateTimeInputBox .lyteDateTimeInputWrapper {
	border: map.get($lyteDateInputFocusedBoxWrapperMap, "border");
    @include addExtraStyles($lyteDateInputFocusedBoxWrapperMap);
}
.lyteDateTimeInputBox .lyteDateTimeInputWrapper > input {
	#{$property-border-right}: map.get($lyteDateTimeInputBoxWrapperInputMap, "border-right");
	border-radius: map.get($lyteDateTimeInputBoxWrapperInputMap, "border-radius");
    @include addExtraStyles($lyteDateTimeInputBoxWrapperInputMap);
}
.lyteDateTimeInputBox .lyteDateTimeInputWrapper > div input {
	border-radius: map.get($lyteDateTimeInputBoxWrapperDivInputMap, "border-radius");
    @include addExtraStyles($lyteDateTimeInputBoxWrapperDivInputMap);
}
.lyteDateTimeInputFlat .lyteDateTimeInputWrapper {
	border-bottom: map.get($lyteDateTimeInputFlatWrapperMap, "border-bottom");
    align-items: flex-end;
	@include addExtraStyles($lyteDateTimeInputFlatWrapperMap)
}
.lyteDateTimeInputFlat:hover .lyteDateTimeInputWrapper {
	border-bottom: map.get($lyteDateTimeInputFlatHoverWrapperMap, "border-bottom");
    @include addExtraStyles($lyteDateTimeInputFlatHoverWrapperMap);
}
.lyteDateInputOpened.lyteDateTimeInputFlat .lyteDateTimeInputWrapper,
.lyteDateInputFocused.lyteDateTimeInputFlat .lyteDateTimeInputWrapper {
	border-bottom: map.get($lyteDateInputFocusedFlatWrapperMap, "border-bottom");
    @include addExtraStyles($lyteDateInputFocusedFlatWrapperMap);
}
.lyteDateTimeInputWrapper input {
	font-family: map.get($lyteDateTimeInputWrapperInputMap, "font-family");
	font-size: map.get($lyteDateTimeInputWrapperInputMap, "font-size");
	background: map.get($lyteDateTimeInputWrapperInputMap, "background");
	color: map.get($lyteDateTimeInputWrapperInputMap, "color");
	border: map.get($lyteDateTimeInputWrapperInputMap, "border");
	box-shadow: map.get($lyteDateTimeInputWrapperInputMap, "box-shadow");
	outline: map.get($lyteDateTimeInputWrapperInputMap, "outline");
    @include addExtraStyles($lyteDateTimeInputWrapperInputMap);
}
.lyteDateTimeInputBox input {
	padding: map.get($lyteDateTimeInputBoxInputMap, "padding");
    @include addExtraStyles($lyteDateTimeInputBoxInputMap);
}
.lyteDateTimeInputFlat input {
	padding: map.get($lyteDateTimeInputFlatInputMap, "padding");
    @include addExtraStyles($lyteDateTimeInputFlatInputMap);
}
.lyteDateTimeInputWrapper lyte-drop-button {
	padding: map.get($lyteDateTimeInputWrapperDropButtonMap, "padding");
    @include addExtraStyles($lyteDateTimeInputWrapperDropButtonMap);
}
.lyteDateTimeInputWrapper .lyteDummyEventContainer:focus lyte-drop-button,
.lyteDateTimeInputWrapper .lyteDummyEventContainer:focus lyte-drop-button:hover,
.lyteDateTimeInputWrapper lyte-drop-button:hover,
.lyteDateTimeInputWrapper lyte-drop-button {
	border: map.get($lyteDateTimeInputWrapperDropButtonMap, "border");
	box-shadow: map.get($lyteDateTimeInputWrapperDropButtonMap, "box-shadow");
    @include addExtraStyles($lyteDateTimeInputWrapperDropButtonMap);
}
.lyteDateTimeInputWormhole {
	position: absolute;
	left: map.get($lyteDateTimeInputWormholeMap, "left");
	top: map.get($lyteDateTimeInputWormholeMap, "top");
	z-index: map.get($lyteDateTimeInputWormholeMap, "z-index");
    @include addExtraStyles($lyteDateTimeInputWormholeMap);
}
.lyteDateTimeInputHidden {
	display: none;
}
.lyteDateTimezone {
	position: absolute;
	#{$property-right}: map.get($lyteDateTimezoneMap, "right");
	top: map.get($lyteDateTimezoneMap, "top");
	bottom: map.get($lyteDateTimezoneMap, "bottom");
	display: flex;
	align-items: center;
	padding: map.get($lyteDateTimezoneMap, "padding");
	color: map.get($lyteDateTimezoneMap, "color");
    @include addExtraStyles($lyteDateTimezoneMap);
}

.lyteDateInputCalendarIcon {
	-webkit-mask: map.get($lyteDateInputCalendarIconMap, "mask-image");
    mask: map.get($lyteDateInputCalendarIconMap, "mask-image");
    width: map.get($lyteDateInputCalendarIconMap, "width");
    height: map.get($lyteDateInputCalendarIconMap, "height");
    background-color: map.get($lyteDateInputCalendarIconMap, "background-color");
    position: absolute;
    #{$property-left}: map.get($lyteDateInputCalendarIconMap, "left");
	cursor: pointer;
    @include addExtraStyles($lyteDateInputCalendarIconMap);
}

.lyteDateTimeInputBox[lt-prop-aria="true"] .lyteDateTimeInputWrapper > input {
	#{$property-padding-right}: map.get($lyteDateTimeInputBoxAriaFirstInputMap, "padding-right");
    width: map.get($lyteDateTimeInputBoxAriaFirstInputMap, "width");
    box-sizing: border-box;
    @include addExtraStyles($lyteDateTimeInputBoxAriaFirstInputMap);
}

[lt-prop-aria="true"] .lyteDateTimeInputWrapper div {
	width: map.get($lyteDateTimeInputWrapperDivAriaMap, "width");
    @include addExtraStyles($lyteDateTimeInputWrapperDivAriaMap);
}

.lyteDateTimeInputFlat[lt-prop-aria="true"] .lyteDateInputCalendarIcon {
	bottom: map.get($lyteDateTimeInputFlatAriaCalendarIconMap, "bottom");
    @include addExtraStyles($lyteDateTimeInputFlatAriaCalendarIconMap);
}
.lyteDateInputCalendarIcon:hover {
	background-color: map.get($lyteDateTimeInputCalendarIconHoverMap, "background-color");
    @include addExtraStyles($lyteDateTimeInputCalendarIconHoverMap);
}
.lyteDateInputOpened .lyteDateInputCalendarIcon,
.lyteDateInputFocused .lyteDateInputCalendarIcon {
	outline: map.get($lyteDateTimeInputCalendarIconFocusMap, "outline");
	background-color: map.get($lyteDateTimeInputCalendarIconFocusMap, "background-color");
    @include addExtraStyles($lyteDateTimeInputCalendarIconFocusMap);
}