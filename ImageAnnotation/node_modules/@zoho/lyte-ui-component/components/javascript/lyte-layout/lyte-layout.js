import { prop } from "@slyte/core";
import { Component } from "../../component.js";

class LyteLayoutComponent extends Component {
    constructor() {
        super();
    }

    data() {
		return {
			
			'ltPropDivision' : prop('array',{'default' : [] }),
			'ltPropSize' : prop('string',{'default':'small'}),
			'ltPropContainerClass' : prop('object',{'default':{'small':'lyte-container-sm','medium':'lyte-container-md','large':'lyte-container-lg','xlarge':'lyte-container-xl','fluid':'lyte-container-fluid'}})		
		};		
	}

    init() {
		
		this.$node.style.display = 'block';
		

	}

    removesizeclass() {
		var sizeclass = this.$node.className;
		var regex =  /lyte-container-(lg|md|fuild|md|xl|sm)/i;
		var size = sizeclass.match(regex) || [];
		switch(size[size.length-1]){
			case 'fuild':
				this.$node.classList.remove('lyte-container-fluid');
				break;
			case 'lg':
				this.$node.classList.remove('lyte-container-lg');
				break;
			case 'md':
				this.$node.classList.remove('lyte-container-md');
				break;
			case 'sm':
				this.$node.classList.remove('lyte-container-sm');
				break;
			case 'xl':
				this.$node.classList.remove('lyte-container-xl');
				break;
			default:
				this.$node.classList.remove('lyte-container');
		}
	}

    static observers() {
        return {
            onChangeSize: function(){
                var size =  this.getData('ltPropSize');
                this.removesizeclass();
                if(size === "fluid"){
                    this.$node.classList.add('lyte-container-fluid');
                }else if(size === 'medium'){
                    this.$node.classList.add('lyte-container-md');
                }else if(size === 'large'){
                    this.$node.classList.add('lyte-container-lg');
                }else if(size === 'xlarge'){
                    this.$node.classList.add('lyte-container-xl');
                }else if(size === 'small'){
                    this.$node.classList.add('lyte-container-sm');
                }else{
                    this.$node.classList.add('lyte-container');
                    this.setData('ltPropSize','default');
                }
            }.observes('ltPropSize').on('init')
        };
    }
}

export { LyteLayoutComponent };


