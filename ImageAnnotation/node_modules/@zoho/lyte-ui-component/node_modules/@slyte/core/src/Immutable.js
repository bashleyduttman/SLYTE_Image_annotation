import { Service } from "./service";

class Immutate extends Service{
    get(data, prop) {
        var val;
        val = data[prop];
        return this.create(val, mp);
    }
    set(data, prop, value) {
        if (!Array.isArray(data)) {
            this.$utils.set(data, prop, value);
        } else {
            data[prop] = value;
        }
        return true;
    }
    create(data, mp) {
        mp = mp || new WeakMap();
        var nData;
        if(data && data.__target__){
            data = data.__target__;
        }
        if(mp.has(data)){
            nData = mp.get(data);
        }
        else if(data && Array.isArray(data)) {
            nData = Array.from(data);
        } else if(data && (typeof data === "object")) {
            nData = Object.assign({}, data);
        }
        if(nData){
            mp.set(data, nData);
            return new Proxy(nData, this);
        }
        return data;
    }
}

export { Immutate };