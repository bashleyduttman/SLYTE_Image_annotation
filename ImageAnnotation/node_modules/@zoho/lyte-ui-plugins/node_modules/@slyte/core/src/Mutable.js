import { Service } from "./service";

var wkMap = new WeakMap();
var ignoreMut = false;
class Mutate extends Service{
    ignoreMut(method){
        ignoreMut = true;
        method();
        ignoreMut = false;
    }
    get(target, prop) {
        if (prop === "__ltPrx__") {
            return true;
        }
        if (prop === "__target__") {
            return target;
        }
        var value = target[prop];
        if (value && value.__ltPrx__) {
            return value;
        }
        if (value && wkMap.has(value)) {
            return wkMap.get(value);
        }
        var descriptor = Object.getOwnPropertyDescriptor(target, prop);
        if (value && (value.constructor.name === "Object" || Array.isArray(value) || (value.$ ? value.$.constructor.name === "$Entity" : false)) && !value.__ltPrx__ && descriptor && descriptor.configurable) {
            var _prxVal = this.create(value);

            // wkMap.set(value, _prxVal);
            return _prxVal;
        }
        return value;
    }
    set(target, prop, value) {
        if (!Array.isArray(target) && ignoreMut == false) {
            this.$utils.set(target, prop, value);
        } else {
            target[prop] = value;
        }
        return true;
    }
    create(data) {
        if (data && data.__ltPrx__) {
            return data;
        }
        if (data && wkMap.has(data)) {
            return wkMap.get(data);
        }
        if(!data || (data && (data.constructor.name !== "Object" && (data.$ ? data.$.constructor.name !== "$Entity" : true) ) && !Array.isArray(data) && !data.__ltPrx__)){
            return data;
        }
        var prxVal = new Proxy(data, this);
        wkMap.set(data, prxVal);
        return prxVal;
    }
}

export { Mutate };
//     if (data && data.__ltPrx__) {
//         return data;
//     }
//     if (data && wkMap.has(data)) {
//         return wkMap.get(data);
//     }
//     if (!data || data && !data.constructor.name === "Object" && !Array.isArray(data) && !value.__ltPrx__) {
//         return data;
//     }
//     var prxVal = new Proxy(data, {
//         set: function set(target, prop, value) {
//             if (!Array.isArray(target)) {
//                 Lyte.Component.set(target, prop, value);
//             } else {
//                 target[prop] = value;
//             }
//             return true;
//         },
//         get: function get(target, prop) {
//             if (prop === "__ltPrx__") {
//                 return true;
//             }
//             if (prop === "__target__") {
//                 return target;
//             }
//             var value = target[prop];
//             if (value && value.__ltPrx__) {
//                 return value;
//             }
//             if (value && wkMap.has(value)) {
//                 return wkMap.get(value);
//             }
//             var descriptor = Object.getOwnPropertyDescriptor(target, prop);
//             if (value && (value.constructor.name === "Object" || Array.isArray(value) || value && value.$ && value.$.hasOwnProperty("isModified")) && !value.__ltPrx__ && descriptor && descriptor.configurable) {
//                 // path = path || [];
//                 // path.push(prop);
//                 // if (Array.isArray(value) && value.model && value.key) {
//                 //     var hmPrx = value.record.$.__hmPrx = value.record.$.__hmPrx || {};
//                 //     var retVal;
//                 //     if (!hmPrx[value.key]) {
//                 //         retVal = hmPrx[value.key] = Lyte.mut(value);
//                 //     } else {
//                 //         retVal = hmPrx[value.key];
//                 //     }
//                 //     return retVal;
//                 // }
//                 var _prxVal = Lyte.mut(value);
//                 wkMap.set(value, _prxVal);
//                 // Object.defineProperty(value, "__mcln__", { value: prxVal});
//                 return _prxVal;
//             }
//             return value;
//         }
//     });
//     wkMap.set(data, prxVal);
//     // Object.defineProperty(data, "__mcln__", { value: prxVal});
//     return prxVal;
// };
// Lyte.immut = function immut(data, mp) {
//     mp = mp || new WeakMap();
//     var nData;
//     if(data && data.__target__){
//         data = data.__target__;
//     }
//     if(mp.has(data)){
//         nData = mp.get(data);
//     }
//     else if(data && Array.isArray(data)) {
//         nData = Array.from(data);
//     } else if(data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) == "object") {
//         nData = Object.assign({}, data);
//     }
//     if(nData){
//         mp.set(data, nData);
//         return new Proxy(nData, {
//             get: function get(data, prop) {
//                 var val;
//                 val = data[prop];
//                 return immut(val, mp);
//             },
//             set: function set(data, prop, value) {
//                 Lyte.Component.set(data, prop, Lyte.immut(value, mp));
//                 return true;
//             }
//         });
//     }
//     return data;
// };