import { ComponentRegistry, _LC } from "@slyte/component";
import { Lyte, prop } from "@slyte/core";

/*convert to custom class and register*/
class LyteEventListener extends ComponentRegistry.Component {
    static _template = "<template tag-name=\"lyte-event-listener\"></template>";
    static _dynamicNodes = [];
    static _observedAttributes = ["eventName"];
    data() {
        return {
            eventName : prop("string")
        }
    }
    init() {
        let self = this;
        let app = _LC.getMyScope(this);
        let regId = app.addEventListener(this.get('eventName'), function() {
            let args = Array.prototype.slice.call(arguments);
            args.$splice(0,0,'on-fire')
            self.throwEvent.apply(self, args );
        });
        //this.set('regId', regId);
        this.regId = regId;
    }
   didDestroy() {
       Lyte.removeEventListener(this.regId);
   }
}
export default LyteEventListener;