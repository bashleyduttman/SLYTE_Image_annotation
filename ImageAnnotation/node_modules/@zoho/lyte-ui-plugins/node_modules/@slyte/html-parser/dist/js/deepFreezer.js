/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
/*!****************************!*\
  !*** ./src/deepFreezer.js ***!
  \****************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   deepFreezer: () => (/* binding */ deepFreezer),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const deepFreezer = function (value) {
  /**
   * ## Freezer - <vignesh.prv> 
   * # Why we need this ?
   * - This is just a deep freezer function which we might need on sending data to users
   * 
   * TODO : Not Much of the validation is done here
   * * For basics requirements this is fine, but on large scale we might need 
   * * a better freezer function which validates its inputs and then freezes it
   * 
   **/
  if (typeof value === 'object') {
    if (Array.isArray(value)) {
      value.forEach(deepFreezer)
    } else {
      for (let key in value) {
        deepFreezer(value[key]);
      }
    }
  }
  return Object.freeze(value);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (deepFreezer);
// module.exports = deepFreezer;
// window[PACKAGE_NAME].deepFreezer = deepFreezer;
Object(window["html-parser"]).deepFreezer = __webpack_exports__["default"];
/******/ })()
;